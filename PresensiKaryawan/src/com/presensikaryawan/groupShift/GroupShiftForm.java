package com.presensikaryawan.groupShift;

import com.dssystem.umum.ChangeCase;
import com.dssystem.umum.ComponentFocus;
import com.presensikaryawan.shiftSetting.*;
import com.presensikaryawan.tools.DaoFactory;
import com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/*
 * masterInventoryGrup.java
 *
 * Created on October 21, 2006, 10:06 AM
 */
/**
 *
 * @author Als
 */
public class GroupShiftForm extends javax.swing.JFrame {

    private DaoFactory service;
    private GroupShift activeGroupShift;
    private JFrame frame;
    private JMenuItem menuItem;
    /**
     * Creates new form masterInventoryGrup
     */
    public GroupShiftForm(final JFrame frame, final JMenuItem menuItem) throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.frame = frame;
        this.menuItem=menuItem;
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                frame.setEnabled(true);
                menuItem.setEnabled(true);
            }
        });
        UIManager.put("nimbusBase", new Color(204, 204, 255));
//        Tampilan();
        // isitable();
        initComponentFocus();
        namaGroupShiftTextField.setDocument(new ChangeCase().getToUpperCase());
        keteranganTextField.setDocument(new ChangeCase().getToUpperCase());
        GroupShiftDao dao = DaoFactory.getGroupShiftDao();
        List<GroupShift> groupShifts = dao.getAllGroupShift();
        GroupShiftTableModel model = new GroupShiftTableModel(groupShifts);

        groupShiftTable.setModel(model);
        groupShiftTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        groupShiftTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        groupShiftTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(6).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(7).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(8).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(9).setPreferredWidth(100);
        groupShiftTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (GroupShift gs : groupShifts) {
            kodeGroupShiftCombo.addItem(gs.getKodeGroupShift());
        }
        ShiftDao daoShift = DaoFactory.getShiftDao();
        List<Shift> shifts = daoShift.getAllShift();
        for (Shift s : shifts) {
            kodeShiftSeninCombo.addItem(s.getKodeShift());
            kodeShiftSelasaCombo.addItem(s.getKodeShift());
            kodeShiftRabuCombo.addItem(s.getKodeShift());
            kodeShiftKamisCombo.addItem(s.getKodeShift());
            kodeShiftJumatCombo.addItem(s.getKodeShift());
            kodeShiftSabtuCombo.addItem(s.getKodeShift());
            kodeShiftMingguCombo.addItem(s.getKodeShift());
        }
        if (groupShifts.isEmpty()) {
            hapusButton.setEnabled(false);
        }
    }

    private void initComponentFocus() {
        namaGroupShiftTextField.addFocusListener(new ComponentFocus(namaGroupShiftTextField));
        keteranganTextField.addFocusListener(new ComponentFocus(keteranganTextField));
        kodeGroupShiftCombo.addFocusListener(new ComponentFocus(kodeGroupShiftCombo));
        kodeShiftSeninCombo.addFocusListener(new ComponentFocus(kodeShiftSeninCombo));
        simpanButton.addFocusListener(new ComponentFocus(simpanButton));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        headPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        menuLabel = new javax.swing.JLabel();
        fungsiLabel = new javax.swing.JLabel();
        panelStatus1 = new com.sistem.panelstatus.PanelStatus();
        cmdKeluar = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        namaGroupShiftLabel = new javax.swing.JLabel();
        kodeGroupShiftLabel = new javax.swing.JLabel();
        namaGroupShiftTextField = new javax.swing.JTextField();
        simpanButton = new javax.swing.JButton();
        kodeGroupShiftCombo = new javax.swing.JComboBox();
        hapusButton = new javax.swing.JButton();
        batalButton = new javax.swing.JButton();
        keteranganGroupShiftLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        hariLabel = new javax.swing.JLabel();
        seninLabel = new javax.swing.JLabel();
        selasaLabel = new javax.swing.JLabel();
        rabuLabel = new javax.swing.JLabel();
        kamisLabel = new javax.swing.JLabel();
        jumatLabel = new javax.swing.JLabel();
        sabtuLabel = new javax.swing.JLabel();
        mingguLabel = new javax.swing.JLabel();
        kodeShiftLabel = new javax.swing.JLabel();
        kodeShiftSeninCombo = new javax.swing.JComboBox();
        jamLabel = new javax.swing.JLabel();
        keteranganTextField = new javax.swing.JTextField();
        waktuShiftSeninTextField = new javax.swing.JTextField();
        waktuShiftSelasaTextField = new javax.swing.JTextField();
        waktuShiftRabuTextField = new javax.swing.JTextField();
        waktuShiftKamisTextField = new javax.swing.JTextField();
        waktuShiftJumatTextField = new javax.swing.JTextField();
        waktuShiftSabtuTextField = new javax.swing.JTextField();
        waktuShiftMingguTextField = new javax.swing.JTextField();
        kodeShiftSelasaCombo = new javax.swing.JComboBox();
        kodeShiftRabuCombo = new javax.swing.JComboBox();
        kodeShiftKamisCombo = new javax.swing.JComboBox();
        kodeShiftJumatCombo = new javax.swing.JComboBox();
        kodeShiftSabtuCombo = new javax.swing.JComboBox();
        kodeShiftMingguCombo = new javax.swing.JComboBox();
        shiftPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        groupShiftTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Kategori");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jDesktopPane1.setBackground(new java.awt.Color(153, 255, 153));
        jDesktopPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        headPanel.setBackground(new java.awt.Color(255, 255, 255));

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logosimtel.jpg"))); // NOI18N

        menuLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        menuLabel.setText("Menu Group Shift Karyawan");

        fungsiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        fungsiLabel.setText("Digunakan untuk menambah, edit dan menghapus data group shift setting karyawan");

        org.jdesktop.layout.GroupLayout headPanelLayout = new org.jdesktop.layout.GroupLayout(headPanel);
        headPanel.setLayout(headPanelLayout);
        headPanelLayout.setHorizontalGroup(
            headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(logoLabel)
                .add(4, 4, 4)
                .add(headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(menuLabel)
                    .add(fungsiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 472, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        headPanelLayout.setVerticalGroup(
            headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(logoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(headPanelLayout.createSequentialGroup()
                        .add(menuLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fungsiLabel)))
                .addContainerGap())
        );

        headPanel.setBounds(0, 0, 700, 77);
        jDesktopPane1.add(headPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelStatus1.setBounds(0, 650, 700, 50);
        jDesktopPane1.add(panelStatus1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmdKeluar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cmdKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Exit.gif"))); // NOI18N
        cmdKeluar.setText("Keluar");
        cmdKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdKeluarActionPerformed(evt);
            }
        });
        cmdKeluar.setBounds(580, 610, 110, 40);
        jDesktopPane1.add(cmdKeluar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        inputPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        namaGroupShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        namaGroupShiftLabel.setText("Nama Group Shift");

        kodeGroupShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        kodeGroupShiftLabel.setText("Kode Group Shift");

        namaGroupShiftTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        namaGroupShiftTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        namaGroupShiftTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaGroupShiftTextFieldActionPerformed(evt);
            }
        });

        simpanButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        simpanButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Save.gif"))); // NOI18N
        simpanButton.setMnemonic('S');
        simpanButton.setText("Simpan");
        simpanButton.setToolTipText("Klik Untuk Simpan");
        simpanButton.setEnabled(false);
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });
        simpanButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                simpanButtonKeyPressed(evt);
            }
        });

        kodeGroupShiftCombo.setEditable(true);
        kodeGroupShiftCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeGroupShiftCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeGroupShiftComboActionPerformed(evt);
            }
        });
        kodeGroupShiftCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeGroupShiftComboKeyPressed(evt);
            }
        });

        hapusButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        hapusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Delete.gif"))); // NOI18N
        hapusButton.setMnemonic('H');
        hapusButton.setText("Hapus");
        hapusButton.setToolTipText("Tombol Untuk Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        batalButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        batalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Undo.gif"))); // NOI18N
        batalButton.setText("Batal");
        batalButton.setToolTipText("Klik untuk batal");
        batalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalButtonActionPerformed(evt);
            }
        });

        keteranganGroupShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        keteranganGroupShiftLabel.setText("Keterangan");

        hariLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        hariLabel.setText("Hari");

        seninLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        seninLabel.setText("Senin");

        selasaLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        selasaLabel.setText("Selasa");

        rabuLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        rabuLabel.setText("Rabu");

        kamisLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        kamisLabel.setText("Kamis");

        jumatLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jumatLabel.setText("Jumat");

        sabtuLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        sabtuLabel.setText("Sabtu");

        mingguLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        mingguLabel.setText("Minggu");

        kodeShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        kodeShiftLabel.setText("Kode Shift");

        kodeShiftSeninCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeShiftSeninCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeShiftSeninComboActionPerformed(evt);
            }
        });
        kodeShiftSeninCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeShiftSeninComboKeyPressed(evt);
            }
        });

        jamLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jamLabel.setText("Waktu Shift");

        keteranganTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        keteranganTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        keteranganTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keteranganTextFieldActionPerformed(evt);
            }
        });

        waktuShiftSeninTextField.setEditable(false);
        waktuShiftSeninTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        waktuShiftSeninTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        waktuShiftSeninTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktuShiftSeninTextFieldActionPerformed(evt);
            }
        });

        waktuShiftSelasaTextField.setEditable(false);
        waktuShiftSelasaTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        waktuShiftSelasaTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        waktuShiftSelasaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktuShiftSelasaTextFieldActionPerformed(evt);
            }
        });

        waktuShiftRabuTextField.setEditable(false);
        waktuShiftRabuTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        waktuShiftRabuTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        waktuShiftRabuTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktuShiftRabuTextFieldActionPerformed(evt);
            }
        });

        waktuShiftKamisTextField.setEditable(false);
        waktuShiftKamisTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        waktuShiftKamisTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        waktuShiftKamisTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktuShiftKamisTextFieldActionPerformed(evt);
            }
        });

        waktuShiftJumatTextField.setEditable(false);
        waktuShiftJumatTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        waktuShiftJumatTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        waktuShiftJumatTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktuShiftJumatTextFieldActionPerformed(evt);
            }
        });

        waktuShiftSabtuTextField.setEditable(false);
        waktuShiftSabtuTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        waktuShiftSabtuTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        waktuShiftSabtuTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktuShiftSabtuTextFieldActionPerformed(evt);
            }
        });

        waktuShiftMingguTextField.setEditable(false);
        waktuShiftMingguTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        waktuShiftMingguTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        waktuShiftMingguTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waktuShiftMingguTextFieldActionPerformed(evt);
            }
        });

        kodeShiftSelasaCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeShiftSelasaCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeShiftSelasaComboActionPerformed(evt);
            }
        });
        kodeShiftSelasaCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeShiftSelasaComboKeyPressed(evt);
            }
        });

        kodeShiftRabuCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeShiftRabuCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeShiftRabuComboActionPerformed(evt);
            }
        });
        kodeShiftRabuCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeShiftRabuComboKeyPressed(evt);
            }
        });

        kodeShiftKamisCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeShiftKamisCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeShiftKamisComboActionPerformed(evt);
            }
        });
        kodeShiftKamisCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeShiftKamisComboKeyPressed(evt);
            }
        });

        kodeShiftJumatCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeShiftJumatCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeShiftJumatComboActionPerformed(evt);
            }
        });
        kodeShiftJumatCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeShiftJumatComboKeyPressed(evt);
            }
        });

        kodeShiftSabtuCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeShiftSabtuCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeShiftSabtuComboActionPerformed(evt);
            }
        });
        kodeShiftSabtuCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeShiftSabtuComboKeyPressed(evt);
            }
        });

        kodeShiftMingguCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeShiftMingguCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeShiftMingguComboActionPerformed(evt);
            }
        });
        kodeShiftMingguCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeShiftMingguComboKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout inputPanelLayout = new org.jdesktop.layout.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator1)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(simpanButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(hapusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(6, 6, 6))
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, keteranganGroupShiftLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(namaGroupShiftLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(kodeGroupShiftLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(kodeGroupShiftCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(namaGroupShiftTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(keteranganTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 300, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(hariLabel)
                            .add(seninLabel)
                            .add(selasaLabel)
                            .add(rabuLabel)
                            .add(kamisLabel)
                            .add(jumatLabel)
                            .add(sabtuLabel)
                            .add(mingguLabel))
                        .add(51, 51, 51)
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(kodeShiftLabel)
                            .add(kodeShiftSeninCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(kodeShiftSelasaCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(kodeShiftRabuCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(kodeShiftKamisCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(kodeShiftJumatCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(kodeShiftSabtuCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(kodeShiftMingguCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(inputPanelLayout.createSequentialGroup()
                                .add(56, 56, 56)
                                .add(jamLabel))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 113, Short.MAX_VALUE)
                                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(waktuShiftSelasaTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(waktuShiftSeninTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(waktuShiftRabuTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(waktuShiftKamisTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(waktuShiftJumatTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(waktuShiftSabtuTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(waktuShiftMingguTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(161, 161, 161)))))
                .add(batalButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(kodeGroupShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeGroupShiftCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(namaGroupShiftTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(namaGroupShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(keteranganGroupShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(keteranganTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(7, 7, 7)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(hariLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jamLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(seninLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(kodeShiftSeninCombo)
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(waktuShiftSeninTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(selasaLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(waktuShiftSelasaTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeShiftSelasaCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rabuLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(waktuShiftRabuTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeShiftRabuCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(kamisLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(waktuShiftKamisTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeShiftKamisCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jumatLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(waktuShiftJumatTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeShiftJumatCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sabtuLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(waktuShiftSabtuTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeShiftSabtuCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(mingguLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(waktuShiftMingguTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeShiftMingguCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(25, 25, 25)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(simpanButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(hapusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(batalButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(30, 30, 30))
        );

        inputPanel.setBounds(0, 70, 700, 410);
        jDesktopPane1.add(inputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        shiftPanel.setBackground(new java.awt.Color(204, 204, 204));
        shiftPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Shift"));

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        groupShiftTable.setAutoCreateRowSorter(true);
        groupShiftTable.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        groupShiftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "KODE", "NAMA", "KETERANGAN", "SENIN", "SELASA", "RABU", "KAMIS", "JUMAT", "SABTU", "MINGGU"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        groupShiftTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                groupShiftTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(groupShiftTable);
        groupShiftTable.getColumnModel().getColumn(0).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(1).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        groupShiftTable.getColumnModel().getColumn(2).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        groupShiftTable.getColumnModel().getColumn(3).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(4).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(5).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(6).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(6).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(7).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(7).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(8).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(8).setPreferredWidth(100);
        groupShiftTable.getColumnModel().getColumn(9).setResizable(false);
        groupShiftTable.getColumnModel().getColumn(9).setPreferredWidth(100);

        org.jdesktop.layout.GroupLayout shiftPanelLayout = new org.jdesktop.layout.GroupLayout(shiftPanel);
        shiftPanel.setLayout(shiftPanelLayout);
        shiftPanelLayout.setHorizontalGroup(
            shiftPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
        );
        shiftPanelLayout.setVerticalGroup(
            shiftPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
        );

        shiftPanel.setBounds(0, 480, 700, 130);
        jDesktopPane1.add(shiftPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDesktopPane1.getAccessibleContext().setAccessibleName("");
        jDesktopPane1.getAccessibleContext().setAccessibleDescription("");

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-708)/2, (screenSize.height-726)/2, 708, 726);
    }// </editor-fold>//GEN-END:initComponents

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        String kodeGroupShift = String.valueOf(kodeGroupShiftCombo.getSelectedItem());

        int ok = JOptionPane.showConfirmDialog(null, "Anda Yakin Akan Menghapus Group Shift Kerja\nDengan Kode = " + kodeGroupShift + "", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {
            try {
                DaoFactory.getGroupShiftDao().delete(activeGroupShift);
                JOptionPane.showMessageDialog(this, "Data Shift Kerja Berhasil Dihapus Dengan Kode\n"
                        + "<html><font color=#FF0000>" + kodeGroupShift + "</font></html>", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Data Gagal Dihapus\n"
                        + "<html><font color=#FF0000>" + ex + "</font></html>", "Error", JOptionPane.ERROR_MESSAGE);

            }

        }
        batalButton.doClick();
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void groupShiftTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groupShiftTableMouseClicked
        try {
            int row = groupShiftTable.getSelectedRow();
            String kodegroup = groupShiftTable.getValueAt(row, 0).toString();
            String namagroup = groupShiftTable.getValueAt(row, 1).toString();
            String deskripsi = groupShiftTable.getValueAt(row, 2).toString();
            String senin_code = groupShiftTable.getValueAt(row, 3).toString();
            String selasa_code = groupShiftTable.getValueAt(row, 4).toString();
            String rabu_code = groupShiftTable.getValueAt(row, 5).toString();
            String kamis_code = groupShiftTable.getValueAt(row, 6).toString();
            String jumat_code = groupShiftTable.getValueAt(row, 7).toString();
            String sabtu_code = groupShiftTable.getValueAt(row, 8).toString();
            String minggu_code = groupShiftTable.getValueAt(row, 9).toString();

            namaGroupShiftTextField.setText(namagroup);
            kodeGroupShiftCombo.setSelectedItem(kodegroup);// TODO add your handling code here:
            keteranganTextField.setText(deskripsi);
            kodeShiftSeninCombo.setSelectedItem(senin_code);
            kodeShiftSelasaCombo.setSelectedItem(selasa_code);
            kodeShiftRabuCombo.setSelectedItem(rabu_code);
            kodeShiftKamisCombo.setSelectedItem(kamis_code);
            kodeShiftJumatCombo.setSelectedItem(jumat_code);
            kodeShiftSabtuCombo.setSelectedItem(sabtu_code);
            kodeShiftMingguCombo.setSelectedItem(minggu_code);

            waktuShiftSeninTextField.setText(DaoFactory.getShiftDao().getByKode(senin_code).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(senin_code).getWaktuSelesai());
            waktuShiftSelasaTextField.setText(DaoFactory.getShiftDao().getByKode(selasa_code).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(selasa_code).getWaktuSelesai());
            waktuShiftRabuTextField.setText(DaoFactory.getShiftDao().getByKode(rabu_code).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(rabu_code).getWaktuSelesai());
            waktuShiftKamisTextField.setText(DaoFactory.getShiftDao().getByKode(kamis_code).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kamis_code).getWaktuSelesai());
            waktuShiftJumatTextField.setText(DaoFactory.getShiftDao().getByKode(jumat_code).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(jumat_code).getWaktuSelesai());
            waktuShiftSabtuTextField.setText(DaoFactory.getShiftDao().getByKode(sabtu_code).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(sabtu_code).getWaktuSelesai());
            waktuShiftMingguTextField.setText(DaoFactory.getShiftDao().getByKode(minggu_code).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(minggu_code).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_groupShiftTableMouseClicked
    private void isitable() {
    }

    private void simpanButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_simpanButtonKeyPressed
        simpanButton.doClick();// TODO add your handling code here:
    }//GEN-LAST:event_simpanButtonKeyPressed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        String kodeGroupShift = String.valueOf(kodeGroupShiftCombo.getSelectedItem());
        String namaGroupShift = namaGroupShiftTextField.getText();
        String keteranganGroupShift = keteranganTextField.getText();
        String senin_code = String.valueOf(kodeShiftSeninCombo.getSelectedItem());
        String selasa_code = String.valueOf(kodeShiftSelasaCombo.getSelectedItem());
        String rabu_code = String.valueOf(kodeShiftRabuCombo.getSelectedItem());
        String kamis_code = String.valueOf(kodeShiftKamisCombo.getSelectedItem());
        String jumat_code = String.valueOf(kodeShiftJumatCombo.getSelectedItem());
        String sabtu_code = String.valueOf(kodeShiftSabtuCombo.getSelectedItem());
        String minggu_code = String.valueOf(kodeShiftMingguCombo.getSelectedItem());

        GroupShift groupShiftBaru = new GroupShift();
        groupShiftBaru.setKodeGroupShift(kodeGroupShift);
        groupShiftBaru.setNamaGroupShift(namaGroupShift);
        groupShiftBaru.setKeterangan(keteranganGroupShift);

        Shift[] shift = new Shift[7];
        for (int i = 0; i < shift.length; i++) {
            shift[i] = new Shift();
        }
        shift[0].setKodeShift(senin_code);
        shift[1].setKodeShift(selasa_code);
        shift[2].setKodeShift(rabu_code);
        shift[3].setKodeShift(kamis_code);
        shift[4].setKodeShift(jumat_code);
        shift[5].setKodeShift(sabtu_code);
        shift[6].setKodeShift(minggu_code);
        char[] charArray = kodeGroupShift.toCharArray();
        groupShiftBaru.setShift(shift);
        if (!namaGroupShiftTextField.getText().matches("") && !keteranganTextField.getText().matches("") && !String.valueOf(kodeGroupShiftCombo.getSelectedItem()).matches("")
                && namaGroupShiftTextField.getText() != null && keteranganTextField.getText() != null && kodeGroupShiftCombo.getSelectedItem() != null) {
            if (charArray.length > 5) {
                JOptionPane.showMessageDialog(this, "Kode Group Shift Tidak Boleh\nMelebihi 5 Karakter", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                if ("Simpan".equals(simpanButton.getText())) {
                    try {
                        GroupShift gShift = DaoFactory.getGroupShiftDao().getByDayShiftKode(senin_code, selasa_code, rabu_code, kamis_code, jumat_code, sabtu_code, minggu_code);
                        if (gShift != null) {
                            JOptionPane.showMessageDialog(this, "Data Gagal Disimpan Data Dengan Property Tersebut Telah Ada\n"
                                    + "<html><font color=#FF0000>Data Dengan Property Tersebut Telah Ada</font></html>", "Error", JOptionPane.ERROR_MESSAGE);
                        } else {
                            DaoFactory.getGroupShiftDao().insert(groupShiftBaru);
                            JOptionPane.showMessageDialog(this, "Data Group Shift Kerja Dengan Kode \n"
                                    + "<html><font color=#FF0000>" + kodeGroupShift + "</font></html>" + "\nBerhasil diSimpan", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                            batalButton.doClick();
                        }
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                } else {
                    try {
                        GroupShift groupShiftLama = DaoFactory.getGroupShiftDao().getByKode(kodeGroupShift);
                        groupShiftLama.setKodeGroupShift(kodeGroupShift);
                        groupShiftLama.setNamaGroupShift(namaGroupShift);
                        groupShiftLama.setKeterangan(keteranganGroupShift);
                        groupShiftLama.setShift(shift);

                        GroupShift gShift = DaoFactory.getGroupShiftDao().getByDayShiftKode(senin_code, selasa_code, rabu_code, kamis_code, jumat_code, sabtu_code, minggu_code);
                        if (gShift != null) {
                            if (!gShift.getKodeGroupShift().equalsIgnoreCase(String.valueOf(kodeGroupShiftCombo.getSelectedItem())) && !gShift.getNamaGroupShift().equalsIgnoreCase(namaGroupShiftTextField.getText()) && !gShift.getKeterangan().equalsIgnoreCase(keteranganTextField.getText())) {
                                JOptionPane.showMessageDialog(this, "Data Gagal Disimpan\n"
                                        + "<html><font color=#FF0000>Data Dengan Property Tersebut Telah Ada</font></html>", "Error", JOptionPane.ERROR_MESSAGE);
                            } else {
                                DaoFactory.getGroupShiftDao().update(groupShiftLama);
                                JOptionPane.showMessageDialog(this, "Data Group Shift Kerja Dengan Kode\n"
                                        + "<html><font color=#FF0000>" + kodeGroupShift + "</font></html>" + "\nBerhasil diUpdate", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                                batalButton.doClick();
                            }
                        } else {
                            DaoFactory.getGroupShiftDao().update(groupShiftLama);
                            JOptionPane.showMessageDialog(this, "Data Group Shift Kerja Dengan Kode\n"
                                    + "<html><font color=#FF0000>" + kodeGroupShift + "</font></html>" + "\nBerhasil diUpdate", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                            batalButton.doClick();
                        }
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }
        } else if (String.valueOf(kodeGroupShiftCombo.getSelectedItem()).matches("") || kodeGroupShiftCombo.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Kode Group Shift Belum Diisi", "ERROR", JOptionPane.ERROR_MESSAGE);
            kodeGroupShiftCombo.requestFocus();
        } else if (namaGroupShiftTextField.getText().matches("") || namaGroupShiftTextField.getText() != null) {
            JOptionPane.showMessageDialog(this, "Nama Group Shift Belum Disii", "ERROR", JOptionPane.ERROR_MESSAGE);
            namaGroupShiftTextField.requestFocus();
        } else if (waktuShiftSeninTextField.getText().matches("") || waktuShiftSelasaTextField.getText().matches("") || waktuShiftRabuTextField.getText().matches("")
                || waktuShiftKamisTextField.getText().matches("") || waktuShiftJumatTextField.getText().matches("") || waktuShiftSabtuTextField.getText().matches("")
                || waktuShiftMingguTextField.getText().matches("")) {
            JOptionPane.showMessageDialog(this, "Waktu Shift Senin - Jumat\nHarus Diisi/Dipilih", "ERROR", JOptionPane.ERROR_MESSAGE);

        } else {
            JOptionPane.showMessageDialog(this, "Keterangan Group Shift Belum Disii", "ERROR", JOptionPane.ERROR_MESSAGE);
            keteranganTextField.requestFocus();
        }
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void cmdKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdKeluarActionPerformed
        frame.setEnabled(true);
        menuItem.setEnabled(true);
        this.dispose();
}//GEN-LAST:event_cmdKeluarActionPerformed

    private void kodeGroupShiftComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeGroupShiftComboActionPerformed
        if (kodeGroupShiftCombo.getSelectedItem() != null) {
            String pilih = String.valueOf(kodeGroupShiftCombo.getSelectedItem());
            if (pilih != null) {

                try {
                    activeGroupShift = DaoFactory.getGroupShiftDao().getByKode(pilih);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            //jika ditemukan
            if (activeGroupShift != null) {
                namaGroupShiftTextField.setText(activeGroupShift.getNamaGroupShift());
                keteranganTextField.setText(activeGroupShift.getKeterangan());

                kodeShiftSeninCombo.setSelectedItem(activeGroupShift.getShift()[0].getKodeShift());
                kodeShiftSelasaCombo.setSelectedItem(activeGroupShift.getShift()[1].getKodeShift());
                kodeShiftRabuCombo.setSelectedItem(activeGroupShift.getShift()[2].getKodeShift());
                kodeShiftKamisCombo.setSelectedItem(activeGroupShift.getShift()[3].getKodeShift());
                kodeShiftJumatCombo.setSelectedItem(activeGroupShift.getShift()[4].getKodeShift());
                kodeShiftSabtuCombo.setSelectedItem(activeGroupShift.getShift()[5].getKodeShift());
                kodeShiftMingguCombo.setSelectedItem(activeGroupShift.getShift()[6].getKodeShift());

                try {
                    waktuShiftSeninTextField.setText(DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[0].getKodeShift()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[0].getKodeShift()).getWaktuSelesai());
                    waktuShiftSelasaTextField.setText(DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[1].getKodeShift()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[1].getKodeShift()).getWaktuSelesai());
                    waktuShiftRabuTextField.setText(DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[2].getKodeShift()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[2].getKodeShift()).getWaktuSelesai());
                    waktuShiftKamisTextField.setText(DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[3].getKodeShift()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[3].getKodeShift()).getWaktuSelesai());
                    waktuShiftJumatTextField.setText(DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[4].getKodeShift()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[4].getKodeShift()).getWaktuSelesai());
                    waktuShiftSabtuTextField.setText(DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[5].getKodeShift()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[5].getKodeShift()).getWaktuSelesai());
                    waktuShiftMingguTextField.setText(DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[6].getKodeShift()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(activeGroupShift.getShift()[6].getKodeShift()).getWaktuSelesai());
                } catch (SQLException ex) {
                    Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                simpanButton.setText("Update");
                simpanButton.setMnemonic('U');
                simpanButton.setEnabled(true);
                hapusButton.setEnabled(true);
                kodeGroupShiftCombo.requestFocus();

            } else {
                namaGroupShiftTextField.setText(null);
                namaGroupShiftTextField.requestFocus();
                keteranganTextField.setText(null);
                hapusButton.setEnabled(false);
                simpanButton.setText("Simpan");
                simpanButton.setMnemonic('S');
                simpanButton.setEnabled(true);
            }
        } else {
            simpanButton.setEnabled(false);
            hapusButton.setEnabled(false);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_kodeGroupShiftComboActionPerformed

    private void namaGroupShiftTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaGroupShiftTextFieldActionPerformed
        simpanButton.setEnabled(true);
        keteranganTextField.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_namaGroupShiftTextFieldActionPerformed

    private void kodeGroupShiftComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeGroupShiftComboKeyPressed
        if (evt.getKeyCode() == 10) {
        }

    }//GEN-LAST:event_kodeGroupShiftComboKeyPressed

    private void batalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalButtonActionPerformed
        namaGroupShiftTextField.setText(null);
        keteranganTextField.setText(null);
        simpanButton.setEnabled(false);
        hapusButton.setEnabled(true);
        kodeGroupShiftCombo.removeAllItems();
        kodeGroupShiftCombo.requestFocus();
        List<GroupShift> groupShifts = null;
        try {
            groupShifts = DaoFactory.getGroupShiftDao().getAllGroupShift();
        } catch (SQLException ex) {
            Logger.getLogger(ShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        GroupShiftTableModel model = new GroupShiftTableModel(groupShifts);
        groupShiftTable.setModel(model);

        for (GroupShift gs : groupShifts) {
            kodeGroupShiftCombo.addItem(gs.getKodeGroupShift());
        }
        if (groupShifts.isEmpty()) {
            hapusButton.setEnabled(false);
        } else {
            hapusButton.setEnabled(true);
        }
}//GEN-LAST:event_batalButtonActionPerformed

    private void kodeShiftSeninComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeShiftSeninComboActionPerformed
        // TODO add your handling code here:
        try {
            waktuShiftSeninTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftSeninCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftSeninCombo.getSelectedItem().toString()).getWaktuSelesai());

        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftSeninComboActionPerformed

    private void kodeShiftSeninComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeShiftSeninComboKeyPressed
        // TODO add your handling code here:
        try {
            waktuShiftSeninTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftSeninCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftSeninCombo.getSelectedItem().toString()).getWaktuSelesai());

        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftSeninComboKeyPressed

    private void keteranganTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keteranganTextFieldActionPerformed
        // TODO add your handling code here:
        simpanButton.requestFocus();
    }//GEN-LAST:event_keteranganTextFieldActionPerformed

    private void waktuShiftSeninTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktuShiftSeninTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktuShiftSeninTextFieldActionPerformed

    private void waktuShiftSelasaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktuShiftSelasaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktuShiftSelasaTextFieldActionPerformed

    private void waktuShiftRabuTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktuShiftRabuTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktuShiftRabuTextFieldActionPerformed

    private void waktuShiftKamisTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktuShiftKamisTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktuShiftKamisTextFieldActionPerformed

    private void waktuShiftJumatTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktuShiftJumatTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktuShiftJumatTextFieldActionPerformed

    private void waktuShiftSabtuTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktuShiftSabtuTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktuShiftSabtuTextFieldActionPerformed

    private void waktuShiftMingguTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waktuShiftMingguTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waktuShiftMingguTextFieldActionPerformed

    private void kodeShiftSelasaComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeShiftSelasaComboActionPerformed
        // TODO add your handling code here:
        try {
            waktuShiftSelasaTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftSelasaCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftSelasaCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftSelasaComboActionPerformed

    private void kodeShiftSelasaComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeShiftSelasaComboKeyPressed
        // TODO add your handling code here:
        try {
            waktuShiftSelasaTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftSelasaCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftSelasaCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftSelasaComboKeyPressed

    private void kodeShiftRabuComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeShiftRabuComboActionPerformed
        // TODO add your handling code here:
        try {

            waktuShiftRabuTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftRabuCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftRabuCombo.getSelectedItem().toString()).getWaktuSelesai());

        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftRabuComboActionPerformed

    private void kodeShiftRabuComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeShiftRabuComboKeyPressed
        // TODO add your handling code here:
        try {
            waktuShiftRabuTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftRabuCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftRabuCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftRabuComboKeyPressed

    private void kodeShiftKamisComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeShiftKamisComboActionPerformed
        // TODO add your handling code here:
        try {
            waktuShiftKamisTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftKamisCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftKamisCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftKamisComboActionPerformed

    private void kodeShiftKamisComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeShiftKamisComboKeyPressed
        // TODO add your handling code here:
        try {
            waktuShiftKamisTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftKamisCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftKamisCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftKamisComboKeyPressed

    private void kodeShiftJumatComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeShiftJumatComboActionPerformed
        // TODO add your handling code here:
        try {
            waktuShiftJumatTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftJumatCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftJumatCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftJumatComboActionPerformed

    private void kodeShiftJumatComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeShiftJumatComboKeyPressed
        // TODO add your handling code here:
        try {
            waktuShiftJumatTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftJumatCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftJumatCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftJumatComboKeyPressed

    private void kodeShiftSabtuComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeShiftSabtuComboActionPerformed
        // TODO add your handling code here:
        try {
            waktuShiftSabtuTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftSabtuCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftSabtuCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftSabtuComboActionPerformed

    private void kodeShiftSabtuComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeShiftSabtuComboKeyPressed
        // TODO add your handling code here:
        try {
            waktuShiftSabtuTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftSabtuCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftSabtuCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftSabtuComboKeyPressed

    private void kodeShiftMingguComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeShiftMingguComboActionPerformed
        // TODO add your handling code here:
        try {
            waktuShiftMingguTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftMingguCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftMingguCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftMingguComboActionPerformed

    private void kodeShiftMingguComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeShiftMingguComboKeyPressed
        // TODO add your handling code here:
        try {
            waktuShiftMingguTextField.setText(DaoFactory.getShiftDao().getByKode(kodeShiftMingguCombo.getSelectedItem().toString()).getWaktuMulai() + " - " + DaoFactory.getShiftDao().getByKode(kodeShiftMingguCombo.getSelectedItem().toString()).getWaktuSelesai());
        } catch (SQLException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kodeShiftMingguComboKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new NimbusLookAndFeel());
            //UIManager.setLookAndFeel(new smooth.windows.SmoothLookAndFeel());

        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new GroupShiftForm(null, null).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(GroupShiftForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton batalButton;
    private javax.swing.JButton cmdKeluar;
    private javax.swing.JLabel fungsiLabel;
    private javax.swing.JTable groupShiftTable;
    private javax.swing.JButton hapusButton;
    private javax.swing.JLabel hariLabel;
    private javax.swing.JPanel headPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jamLabel;
    private javax.swing.JLabel jumatLabel;
    private javax.swing.JLabel kamisLabel;
    private javax.swing.JLabel keteranganGroupShiftLabel;
    private javax.swing.JTextField keteranganTextField;
    private javax.swing.JComboBox kodeGroupShiftCombo;
    private javax.swing.JLabel kodeGroupShiftLabel;
    private javax.swing.JComboBox kodeShiftJumatCombo;
    private javax.swing.JComboBox kodeShiftKamisCombo;
    private javax.swing.JLabel kodeShiftLabel;
    private javax.swing.JComboBox kodeShiftMingguCombo;
    private javax.swing.JComboBox kodeShiftRabuCombo;
    private javax.swing.JComboBox kodeShiftSabtuCombo;
    private javax.swing.JComboBox kodeShiftSelasaCombo;
    private javax.swing.JComboBox kodeShiftSeninCombo;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel menuLabel;
    private javax.swing.JLabel mingguLabel;
    private javax.swing.JLabel namaGroupShiftLabel;
    private javax.swing.JTextField namaGroupShiftTextField;
    private com.sistem.panelstatus.PanelStatus panelStatus1;
    private javax.swing.JLabel rabuLabel;
    private javax.swing.JLabel sabtuLabel;
    private javax.swing.JLabel selasaLabel;
    private javax.swing.JLabel seninLabel;
    private javax.swing.JPanel shiftPanel;
    private javax.swing.JButton simpanButton;
    private javax.swing.JTextField waktuShiftJumatTextField;
    private javax.swing.JTextField waktuShiftKamisTextField;
    private javax.swing.JTextField waktuShiftMingguTextField;
    private javax.swing.JTextField waktuShiftRabuTextField;
    private javax.swing.JTextField waktuShiftSabtuTextField;
    private javax.swing.JTextField waktuShiftSelasaTextField;
    private javax.swing.JTextField waktuShiftSeninTextField;
    // End of variables declaration//GEN-END:variables
}
