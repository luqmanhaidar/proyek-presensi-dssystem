package com.presensikaryawan.shiftSetting;

import com.presensikaryawan.posisi.*;
import com.presensikaryawan.tools.DaoFactory;
import com.dssystem.umum.ChangeCase;
import com.dssystem.umum.ComponentFocus;
import com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/*
 * masterInventoryGrup.java
 *
 * Created on October 21, 2006, 10:06 AM
 */
/**
 *
 * @author Als
 */
public class ShiftForm extends javax.swing.JFrame {

    private DaoFactory service;
    private Shift activeShift;
    private JFrame frame;

    /**
     * Creates new form masterInventoryGrup
     */
    public ShiftForm(final JFrame frame) throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.frame = frame;
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                frame.setEnabled(true);

            }
        });
        UIManager.put("nimbusBase", new Color(204, 204, 255));
//        Tampilan();
        // isitable();
        initComponentFocus();
        namaShiftTextField.setDocument(new ChangeCase().getToUpperCase());
        ShiftDao dao = DaoFactory.getShiftDao();
        List<Shift> shifts = dao.getAllShift();
        ShiftTableModel model = new ShiftTableModel(shifts);
        shiftTable.setModel(model);
        for (Shift s : shifts) {
            kodeShiftCombo.addItem(s.getKodeShift());
        }
        if (shifts.isEmpty()) {
            hapusButton.setEnabled(false);
        }
    }

    private void initComponentFocus() {
        namaShiftTextField.addFocusListener(new ComponentFocus(namaShiftTextField));
        kodeShiftCombo.addFocusListener(new ComponentFocus(kodeShiftCombo));
        simpanButton.addFocusListener(new ComponentFocus(simpanButton));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        headPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        menuLabel = new javax.swing.JLabel();
        fungsiLabel = new javax.swing.JLabel();
        panelStatus1 = new com.sistem.panelstatus.PanelStatus();
        cmdKeluar = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        namaShiftLabel = new javax.swing.JLabel();
        kodeShiftLabel = new javax.swing.JLabel();
        namaShiftTextField = new javax.swing.JTextField();
        simpanButton = new javax.swing.JButton();
        kodeShiftCombo = new javax.swing.JComboBox();
        hapusButton = new javax.swing.JButton();
        batalButton = new javax.swing.JButton();
        waktuMulaiLabel = new javax.swing.JLabel();
        waktuSelesaiLabel = new javax.swing.JLabel();
        menitMulaiLabel = new javax.swing.JLabel();
        jamMulaiLabel1 = new javax.swing.JLabel();
        jamSelesaiLabel = new javax.swing.JLabel();
        menitSelesaiLabel = new javax.swing.JLabel();
        menitMulaiCombo = new javax.swing.JComboBox();
        jamMulaiCombo = new javax.swing.JComboBox();
        menitSelesaiCombo = new javax.swing.JComboBox();
        jamSelesaiCombo = new javax.swing.JComboBox();
        shiftPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        shiftTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Kategori");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jDesktopPane1.setBackground(new java.awt.Color(153, 255, 153));
        jDesktopPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        headPanel.setBackground(new java.awt.Color(255, 255, 255));

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logosimtel.jpg"))); // NOI18N

        menuLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        menuLabel.setText("Menu Shift Setting Karyawan");

        fungsiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        fungsiLabel.setText("Digunakan untuk menambah, edit dan menghapus data shift setting karyawan");

        org.jdesktop.layout.GroupLayout headPanelLayout = new org.jdesktop.layout.GroupLayout(headPanel);
        headPanel.setLayout(headPanelLayout);
        headPanelLayout.setHorizontalGroup(
            headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(logoLabel)
                .add(4, 4, 4)
                .add(headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(menuLabel)
                    .add(fungsiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 437, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(199, Short.MAX_VALUE))
        );
        headPanelLayout.setVerticalGroup(
            headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(logoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(headPanelLayout.createSequentialGroup()
                        .add(menuLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fungsiLabel)))
                .addContainerGap())
        );

        headPanel.setBounds(0, 0, 700, 77);
        jDesktopPane1.add(headPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelStatus1.setBounds(-10, 630, 710, 50);
        jDesktopPane1.add(panelStatus1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmdKeluar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cmdKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Exit.gif"))); // NOI18N
        cmdKeluar.setText("Keluar");
        cmdKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdKeluarActionPerformed(evt);
            }
        });
        cmdKeluar.setBounds(570, 580, 110, 40);
        jDesktopPane1.add(cmdKeluar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        inputPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        namaShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        namaShiftLabel.setText("Nama Shift");

        kodeShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        kodeShiftLabel.setText("Kode Shift");

        namaShiftTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        namaShiftTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        namaShiftTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaShiftTextFieldActionPerformed(evt);
            }
        });

        simpanButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        simpanButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Save.gif"))); // NOI18N
        simpanButton.setMnemonic('S');
        simpanButton.setText("Simpan");
        simpanButton.setToolTipText("Klik Untuk Simpan");
        simpanButton.setEnabled(false);
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });
        simpanButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                simpanButtonKeyPressed(evt);
            }
        });

        kodeShiftCombo.setEditable(true);
        kodeShiftCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeShiftCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeShiftComboActionPerformed(evt);
            }
        });
        kodeShiftCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeShiftComboKeyPressed(evt);
            }
        });

        hapusButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        hapusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Delete.gif"))); // NOI18N
        hapusButton.setMnemonic('H');
        hapusButton.setText("Hapus");
        hapusButton.setToolTipText("Tombol Untuk Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        batalButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        batalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Undo.gif"))); // NOI18N
        batalButton.setText("Batal");
        batalButton.setToolTipText("Klik untuk batal");
        batalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalButtonActionPerformed(evt);
            }
        });

        waktuMulaiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        waktuMulaiLabel.setText("Waktu Mulai");

        waktuSelesaiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        waktuSelesaiLabel.setText("Waktu Selesai");

        menitMulaiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        menitMulaiLabel.setText("Menit :");

        jamMulaiLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jamMulaiLabel1.setText("Jam :");

        jamSelesaiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jamSelesaiLabel.setText("Jam :");

        menitSelesaiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        menitSelesaiLabel.setText("Menit :");

        menitMulaiCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        menitMulaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        menitMulaiCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menitMulaiComboActionPerformed(evt);
            }
        });
        menitMulaiCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                menitMulaiComboKeyPressed(evt);
            }
        });

        jamMulaiCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jamMulaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        jamMulaiCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jamMulaiComboActionPerformed(evt);
            }
        });
        jamMulaiCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jamMulaiComboKeyPressed(evt);
            }
        });

        menitSelesaiCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        menitSelesaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        menitSelesaiCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menitSelesaiComboActionPerformed(evt);
            }
        });
        menitSelesaiCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                menitSelesaiComboKeyPressed(evt);
            }
        });

        jamSelesaiCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jamSelesaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        jamSelesaiCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jamSelesaiComboActionPerformed(evt);
            }
        });
        jamSelesaiCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jamSelesaiComboKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout inputPanelLayout = new org.jdesktop.layout.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, waktuSelesaiLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(namaShiftLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(kodeShiftLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, waktuMulaiLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(inputPanelLayout.createSequentialGroup()
                                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(inputPanelLayout.createSequentialGroup()
                                        .add(jamSelesaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jamSelesaiCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(inputPanelLayout.createSequentialGroup()
                                        .add(jamMulaiLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jamMulaiCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(55, 55, 55)
                                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(inputPanelLayout.createSequentialGroup()
                                        .add(menitSelesaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(menitSelesaiCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(inputPanelLayout.createSequentialGroup()
                                        .add(menitMulaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(menitMulaiCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(namaShiftTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(kodeShiftCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 213, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(simpanButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(hapusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(batalButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(kodeShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeShiftCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(namaShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(namaShiftTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(waktuMulaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(menitMulaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jamMulaiLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(menitMulaiCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jamMulaiCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(waktuSelesaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jamSelesaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(menitSelesaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(menitSelesaiCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jamSelesaiCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(50, 50, 50)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(simpanButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(hapusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(batalButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        inputPanel.setBounds(0, 70, 700, 250);
        jDesktopPane1.add(inputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        shiftPanel.setBackground(new java.awt.Color(204, 204, 204));
        shiftPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Shift"));

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        shiftTable.setAutoCreateRowSorter(true);
        shiftTable.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        shiftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kode Shift", "Nama Shift", "Waktu Mulai", "Waktu Selesai"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        shiftTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shiftTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(shiftTable);

        org.jdesktop.layout.GroupLayout shiftPanelLayout = new org.jdesktop.layout.GroupLayout(shiftPanel);
        shiftPanel.setLayout(shiftPanelLayout);
        shiftPanelLayout.setHorizontalGroup(
            shiftPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
        );
        shiftPanelLayout.setVerticalGroup(
            shiftPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(shiftPanelLayout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        shiftPanel.setBounds(0, 320, 700, 250);
        jDesktopPane1.add(shiftPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDesktopPane1.getAccessibleContext().setAccessibleName("");
        jDesktopPane1.getAccessibleContext().setAccessibleDescription("");

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-716)/2, (screenSize.height-729)/2, 716, 729);
    }// </editor-fold>//GEN-END:initComponents

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        String kodeShift = String.valueOf(kodeShiftCombo.getSelectedItem());
        String namaShift = namaShiftTextField.getText();
        activeShift.setKodeShift(kodeShift);
        activeShift.setNamaShift(namaShift);
        String waktuMulai = String.valueOf(jamMulaiCombo.getSelectedItem()) + ":" + String.valueOf(menitMulaiCombo.getSelectedItem());
        String waktuSelesai = String.valueOf(jamSelesaiCombo.getSelectedItem()) + ":" + String.valueOf(menitSelesaiCombo.getSelectedItem());
        activeShift.setWaktuMulai(waktuMulai);
        activeShift.setWaktuSelesai(waktuSelesai);
        int ok = JOptionPane.showConfirmDialog(null, "Anda Yakin Akan Menghapus Shift Kerja\nDengan Kode = " + kodeShift + "", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {
            try {
                DaoFactory.getShiftDao().delete(activeShift);
                JOptionPane.showMessageDialog(this, "Data Shift Kerja Berhasil Dihapus Dengan Kode\n"
                        + "<html><font color=#FF0000>" + kodeShift + "</font></html>", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Data Gagal Dihapus\n"
                        + "<html><font color=#FF0000>" + ex + "</font></html>", "Error", JOptionPane.ERROR_MESSAGE);

            }

        }
        batalButton.doClick();
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void shiftTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shiftTableMouseClicked
        int row = shiftTable.getSelectedRow();
        String kodegroup = shiftTable.getValueAt(row, 0).toString();
        String namagroup = shiftTable.getValueAt(row, 1).toString();
        String waktuMulaiGroup = shiftTable.getValueAt(row, 2).toString();
        String waktuSelesaiGroup = shiftTable.getValueAt(row, 3).toString();

        namaShiftTextField.setText(namagroup);
        kodeShiftCombo.setSelectedItem(kodegroup);// TODO add your handling code here:
        jamMulaiCombo.setSelectedItem(waktuMulaiGroup.substring(0, 2));
        jamSelesaiCombo.setSelectedItem(waktuSelesaiGroup.substring(0, 2));
        menitMulaiCombo.setSelectedItem(waktuMulaiGroup.substring(3, 5));
        menitSelesaiCombo.setSelectedItem(waktuSelesaiGroup.substring(3, 5));
    }//GEN-LAST:event_shiftTableMouseClicked
    private void isitable() {
    }

    private void simpanButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_simpanButtonKeyPressed
        simpanButton.doClick();// TODO add your handling code here:
    }//GEN-LAST:event_simpanButtonKeyPressed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        String kodeShift = String.valueOf(kodeShiftCombo.getSelectedItem());
        String namaShift = namaShiftTextField.getText();
        Shift shiftBaru = new Shift();
        String waktuMulai = String.valueOf(jamMulaiCombo.getSelectedItem()) + ":" + String.valueOf(menitMulaiCombo.getSelectedItem());
        String waktuSelesai = String.valueOf(jamSelesaiCombo.getSelectedItem()) + ":" + String.valueOf(menitSelesaiCombo.getSelectedItem());
        shiftBaru.setKodeShift(kodeShift);
        shiftBaru.setNamaShift(namaShift);
        shiftBaru.setWaktuMulai(waktuMulai);
        shiftBaru.setWaktuSelesai(waktuSelesai);
        if (!namaShiftTextField.getText().matches("") && !String.valueOf(kodeShiftCombo.getSelectedItem()).matches("")) {
            if ("Simpan".equals(simpanButton.getText())) {
                try {
                    DaoFactory.getShiftDao().insert(shiftBaru);
                    JOptionPane.showMessageDialog(this, "Data Shift Kerja Dengan Kode \n"
                            + "<html><font color=#FF0000>" + kodeShift + "</font></html>" + "\nBerhasil diSimpan", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                    batalButton.doClick();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                try {
                    Shift shiftLama = DaoFactory.getShiftDao().getByKode(kodeShift);
                    shiftLama.setKodeShift(kodeShift);
                    shiftLama.setNamaShift(namaShift);
                    shiftLama.setWaktuMulai(waktuMulai);
                    shiftLama.setWaktuSelesai(waktuSelesai);
                    DaoFactory.getShiftDao().update(shiftLama);
                    JOptionPane.showMessageDialog(this, "Data Shift Kerja Dengan Kode\n"
                            + "<html><font color=#FF0000>" + kodeShift + "</font></html>" + "\nBerhasil diUpdate", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                    batalButton.doClick();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        } else if (String.valueOf(kodeShiftCombo.getSelectedItem()).matches("")) {
            JOptionPane.showMessageDialog(this, "Kode Shift Belum Diisi");
            kodeShiftCombo.requestFocus();
        } else {
            JOptionPane.showMessageDialog(this, "Nama Shift Belum Disii");
            namaShiftTextField.requestFocus();
        }
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void cmdKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdKeluarActionPerformed
        frame.setEnabled(true);
        this.dispose();
}//GEN-LAST:event_cmdKeluarActionPerformed

    private void kodeShiftComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeShiftComboActionPerformed
        if (kodeShiftCombo.getSelectedItem() != null) {
            String pilih = String.valueOf(kodeShiftCombo.getSelectedItem());
            if (pilih != null) {

                try {
                    activeShift = DaoFactory.getShiftDao().getByKode(pilih);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            //jika ditemukan
            if (activeShift != null) {
                namaShiftTextField.setText(activeShift.getNamaShift());
                String waktuMulaiGroup = activeShift.getWaktuMulai();
                String waktuSelesaiGroup = activeShift.getWaktuSelesai();

                simpanButton.setText("Update");
                simpanButton.setMnemonic('U');
                simpanButton.setEnabled(true);
                hapusButton.setEnabled(true);
                kodeShiftCombo.requestFocus();
                menitMulaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"}));
                jamMulaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"}));
                menitSelesaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"}));
                jamSelesaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"}));
                jamMulaiCombo.setSelectedItem(waktuMulaiGroup.substring(0, 2));
                jamSelesaiCombo.setSelectedItem(waktuSelesaiGroup.substring(0, 2));
                menitMulaiCombo.setSelectedItem(waktuMulaiGroup.substring(3, 5));
                menitSelesaiCombo.setSelectedItem(waktuSelesaiGroup.substring(3, 5));
            } else {
                namaShiftTextField.setText(null);
                namaShiftTextField.requestFocus();
                hapusButton.setEnabled(false);
                simpanButton.setText("Simpan");
                simpanButton.setMnemonic('S');
                simpanButton.setEnabled(true);
            }
        } else {
            simpanButton.setEnabled(false);
            hapusButton.setEnabled(false);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_kodeShiftComboActionPerformed

    private void namaShiftTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaShiftTextFieldActionPerformed
        simpanButton.setEnabled(true);
        jamMulaiCombo.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_namaShiftTextFieldActionPerformed

    private void kodeShiftComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeShiftComboKeyPressed
        if (evt.getKeyCode() == 10) {
        }

    }//GEN-LAST:event_kodeShiftComboKeyPressed

    private void batalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalButtonActionPerformed
        namaShiftTextField.setText(null);
        simpanButton.setEnabled(false);
        hapusButton.setEnabled(true);
        kodeShiftCombo.removeAllItems();
        jamMulaiCombo.removeAllItems();
        menitMulaiCombo.removeAllItems();
        jamSelesaiCombo.removeAllItems();
        menitSelesaiCombo.removeAllItems();
        kodeShiftCombo.requestFocus();
        menitMulaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"}));
        jamMulaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"}));
        menitSelesaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"}));
        jamSelesaiCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"}));
        List<Shift> shifts = null;
        try {
            shifts = DaoFactory.getShiftDao().getAllShift();
        } catch (SQLException ex) {
            Logger.getLogger(ShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        ShiftTableModel model = new ShiftTableModel(shifts);
        shiftTable.setModel(model);

        if (shifts.isEmpty()) {
            hapusButton.setEnabled(false);
        } else {
            hapusButton.setEnabled(true);
        }

        for (Shift s : shifts) {
            kodeShiftCombo.addItem(s.getKodeShift());
        }

}//GEN-LAST:event_batalButtonActionPerformed

    private void menitMulaiComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menitMulaiComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menitMulaiComboActionPerformed

    private void menitMulaiComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menitMulaiComboKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_menitMulaiComboKeyPressed

    private void jamMulaiComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jamMulaiComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jamMulaiComboActionPerformed

    private void jamMulaiComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jamMulaiComboKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jamMulaiComboKeyPressed

    private void menitSelesaiComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menitSelesaiComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menitSelesaiComboActionPerformed

    private void menitSelesaiComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menitSelesaiComboKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_menitSelesaiComboKeyPressed

    private void jamSelesaiComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jamSelesaiComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jamSelesaiComboActionPerformed

    private void jamSelesaiComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jamSelesaiComboKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jamSelesaiComboKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new NimbusLookAndFeel());

        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new ShiftForm(null).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(PosisiForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton batalButton;
    private javax.swing.JButton cmdKeluar;
    private javax.swing.JLabel fungsiLabel;
    private javax.swing.JButton hapusButton;
    private javax.swing.JPanel headPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jamMulaiCombo;
    private javax.swing.JLabel jamMulaiLabel1;
    private javax.swing.JComboBox jamSelesaiCombo;
    private javax.swing.JLabel jamSelesaiLabel;
    private javax.swing.JComboBox kodeShiftCombo;
    private javax.swing.JLabel kodeShiftLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JComboBox menitMulaiCombo;
    private javax.swing.JLabel menitMulaiLabel;
    private javax.swing.JComboBox menitSelesaiCombo;
    private javax.swing.JLabel menitSelesaiLabel;
    private javax.swing.JLabel menuLabel;
    private javax.swing.JLabel namaShiftLabel;
    private javax.swing.JTextField namaShiftTextField;
    private com.sistem.panelstatus.PanelStatus panelStatus1;
    private javax.swing.JPanel shiftPanel;
    private javax.swing.JTable shiftTable;
    private javax.swing.JButton simpanButton;
    private javax.swing.JLabel waktuMulaiLabel;
    private javax.swing.JLabel waktuSelesaiLabel;
    // End of variables declaration//GEN-END:variables
}
