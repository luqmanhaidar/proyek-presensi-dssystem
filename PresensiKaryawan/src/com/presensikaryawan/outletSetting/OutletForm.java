package com.presensikaryawan.outletSetting;

import com.presensikaryawan.tools.DaoFactory;
import com.dssystem.umum.ChangeCase;
import com.dssystem.umum.ComponentFocus;
import com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/*
 * masterInventoryGrup.java
 *
 * Created on October 21, 2006, 10:06 AM
 */
/**
 *
 * @author Als
 */
public class OutletForm extends javax.swing.JFrame {

    private DaoFactory service;
    private Outlet activeOutlet;
    private JFrame frame;

    /**
     * Creates new form masterInventoryGrup
     */
    public OutletForm(final JFrame frame) throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.frame = frame;
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                frame.setEnabled(true);

            }
        });
        UIManager.put("nimbusBase", new Color(204, 204, 255));
//        Tampilan();
        // isitable();
        initComponentFocus();
        namaOutletTextField.setDocument(new ChangeCase().getToUpperCase());
        alamatOutletTextField.setDocument(new ChangeCase().getToUpperCase());
        OutletDao dao = DaoFactory.getOutletDao();
        List<Outlet> outlets = dao.getAllOutlet();
        OutletTableModel model = new OutletTableModel(outlets);
        outletTable.setModel(model);
        for (Outlet o : outlets) {
            kodeOutletCombo.addItem(o.getKodeOutlet());
        }
    }

    private void initComponentFocus() {
        namaOutletTextField.addFocusListener(new ComponentFocus(namaOutletTextField));
        alamatOutletTextField.addFocusListener(new ComponentFocus(alamatOutletTextField));
        kodeOutletCombo.addFocusListener(new ComponentFocus(kodeOutletCombo));
        simpanButton.addFocusListener(new ComponentFocus(simpanButton));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        headPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        menuLabel = new javax.swing.JLabel();
        fungsiLabel = new javax.swing.JLabel();
        panelStatus1 = new com.sistem.panelstatus.PanelStatus();
        cmdKeluar = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        namaOutletLabel = new javax.swing.JLabel();
        kodeOutletLabel = new javax.swing.JLabel();
        namaOutletTextField = new javax.swing.JTextField();
        simpanButton = new javax.swing.JButton();
        kodeOutletCombo = new javax.swing.JComboBox();
        hapusButton = new javax.swing.JButton();
        batalButton = new javax.swing.JButton();
        alamatOutletLabel = new javax.swing.JLabel();
        alamatOutletTextField = new javax.swing.JTextField();
        outletPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outletTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Outlet");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jDesktopPane1.setBackground(new java.awt.Color(153, 255, 153));
        jDesktopPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        headPanel.setBackground(new java.awt.Color(255, 255, 255));

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logosimtel.jpg"))); // NOI18N

        menuLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        menuLabel.setText("Menu Outlet");

        fungsiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        fungsiLabel.setText("Digunakan untuk menambah, edit dan menghapus data outlet");

        org.jdesktop.layout.GroupLayout headPanelLayout = new org.jdesktop.layout.GroupLayout(headPanel);
        headPanel.setLayout(headPanelLayout);
        headPanelLayout.setHorizontalGroup(
            headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(logoLabel)
                .add(4, 4, 4)
                .add(headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(menuLabel)
                    .add(fungsiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 437, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        headPanelLayout.setVerticalGroup(
            headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(logoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(headPanelLayout.createSequentialGroup()
                        .add(menuLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fungsiLabel)))
                .addContainerGap())
        );

        headPanel.setBounds(0, 0, 550, 77);
        jDesktopPane1.add(headPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelStatus1.setBounds(0, 570, 560, 50);
        jDesktopPane1.add(panelStatus1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmdKeluar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cmdKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Exit.gif"))); // NOI18N
        cmdKeluar.setText("Keluar");
        cmdKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdKeluarActionPerformed(evt);
            }
        });
        cmdKeluar.setBounds(430, 510, 110, 40);
        jDesktopPane1.add(cmdKeluar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        inputPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        namaOutletLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        namaOutletLabel.setText("Nama Outlet");

        kodeOutletLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        kodeOutletLabel.setText("Kode Outlet");

        namaOutletTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        namaOutletTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        namaOutletTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaOutletTextFieldActionPerformed(evt);
            }
        });

        simpanButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        simpanButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Save.gif"))); // NOI18N
        simpanButton.setMnemonic('S');
        simpanButton.setText("Simpan");
        simpanButton.setToolTipText("Klik Untuk Simpan");
        simpanButton.setEnabled(false);
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });
        simpanButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                simpanButtonKeyPressed(evt);
            }
        });

        kodeOutletCombo.setEditable(true);
        kodeOutletCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeOutletCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeOutletComboActionPerformed(evt);
            }
        });
        kodeOutletCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeOutletComboKeyPressed(evt);
            }
        });

        hapusButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        hapusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Delete.gif"))); // NOI18N
        hapusButton.setMnemonic('H');
        hapusButton.setText("Hapus");
        hapusButton.setToolTipText("Tombol Untuk Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        batalButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        batalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Undo.gif"))); // NOI18N
        batalButton.setText("Batal");
        batalButton.setToolTipText("Klik untuk batal");
        batalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalButtonActionPerformed(evt);
            }
        });

        alamatOutletLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        alamatOutletLabel.setText("Alamat Outlet");

        alamatOutletTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        alamatOutletTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        alamatOutletTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alamatOutletTextFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout inputPanelLayout = new org.jdesktop.layout.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, namaOutletLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, kodeOutletLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(kodeOutletCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(namaOutletTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 360, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(72, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(simpanButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(hapusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(batalButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(alamatOutletLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(alamatOutletTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 360, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(72, 72, 72))))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(kodeOutletLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeOutletCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(namaOutletLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(namaOutletTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(alamatOutletLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(alamatOutletTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 13, Short.MAX_VALUE)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(hapusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(batalButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(simpanButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        inputPanel.setBounds(0, 70, 550, 180);
        jDesktopPane1.add(inputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        outletPanel.setBackground(new java.awt.Color(204, 204, 204));
        outletPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Outlet"));

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        outletTable.setAutoCreateRowSorter(true);
        outletTable.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        outletTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Kode Outlet", "Nama Outlet", "Alamat Outlet"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        outletTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outletTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(outletTable);
        outletTable.getColumnModel().getColumn(0).setResizable(false);
        outletTable.getColumnModel().getColumn(0).setPreferredWidth(150);
        outletTable.getColumnModel().getColumn(1).setResizable(false);
        outletTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        outletTable.getColumnModel().getColumn(2).setResizable(false);
        outletTable.getColumnModel().getColumn(2).setPreferredWidth(300);

        org.jdesktop.layout.GroupLayout outletPanelLayout = new org.jdesktop.layout.GroupLayout(outletPanel);
        outletPanel.setLayout(outletPanelLayout);
        outletPanelLayout.setHorizontalGroup(
            outletPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(outletPanelLayout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 522, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        outletPanelLayout.setVerticalGroup(
            outletPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(outletPanelLayout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        outletPanel.setBounds(0, 250, 550, 250);
        jDesktopPane1.add(outletPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 563, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDesktopPane1.getAccessibleContext().setAccessibleName("");
        jDesktopPane1.getAccessibleContext().setAccessibleDescription("");

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-563)/2, (screenSize.height-654)/2, 563, 654);
    }// </editor-fold>//GEN-END:initComponents

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        String kodeOutlet = String.valueOf(kodeOutletCombo.getSelectedItem());
        String namaOutlet = namaOutletTextField.getText();
        String alamatOutlet = alamatOutletTextField.getText();
        activeOutlet.setKodeOutlet(kodeOutlet);
        activeOutlet.setNamaOutlet(namaOutlet);
        activeOutlet.setAlamatOutlet(alamatOutlet);
        int ok = JOptionPane.showConfirmDialog(null, "Anda Yakin Akan Menghapus Data\nDengan Kode = " + kodeOutlet + "", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {
            try {
                DaoFactory.getOutletDao().delete(activeOutlet);
                JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus dengan kode\n"
                        + "<html><font color=#FF0000>" + kodeOutlet + "</font></html>", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Data Gagal Dihapus\n"
                        + "<html><font color=#FF0000>" + ex + "</font></html>", "Error", JOptionPane.ERROR_MESSAGE);

            }

        }
        batalButton.doClick();
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void outletTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outletTableMouseClicked
        int row = outletTable.getSelectedRow();
        String kodeOutlet = outletTable.getValueAt(row, 0).toString();
        String namaOutlet = outletTable.getValueAt(row, 1).toString();
        String alamatOutlet = outletTable.getValueAt(row, 2).toString();
        namaOutletTextField.setText(namaOutlet);
        alamatOutletTextField.setText(alamatOutlet);
        kodeOutletCombo.setSelectedItem(kodeOutlet);// TODO add your handling code here:
    }//GEN-LAST:event_outletTableMouseClicked
    private void isitable() {
    }

    private void simpanButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_simpanButtonKeyPressed
        simpanButton.doClick();// TODO add your handling code here:
    }//GEN-LAST:event_simpanButtonKeyPressed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        String kodeOutlet = String.valueOf(kodeOutletCombo.getSelectedItem());
        String namaOutlet = namaOutletTextField.getText();
        String alamatOutlet = alamatOutletTextField.getText();
        Outlet outletBaru = new Outlet();
        outletBaru.setKodeOutlet(kodeOutlet);
        outletBaru.setNamaOutlet(namaOutlet);
        outletBaru.setAlamatOutlet(alamatOutlet);
        if ("Simpan".equals(simpanButton.getText())) {
            if (namaOutlet.matches("") || alamatOutlet.matches("")) {
                JOptionPane.showMessageDialog(this, "Data Gagal Disimpan\nNama dan Alamat Harus Diisi", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    DaoFactory.getOutletDao().insert(outletBaru);

                    JOptionPane.showMessageDialog(this, "Data dengan KOde \n"
                            + "<html><font color=#FF0000>" + kodeOutlet + "</font></html>" + "\nBerhasil diSimpan", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                    batalButton.doClick();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        } else {
            if (namaOutlet.matches("") || alamatOutlet.matches("")) {
                JOptionPane.showMessageDialog(this, "Data Gagal Disimpan\nNama dan Alamat Harus Diisi", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    Outlet outletLama = DaoFactory.getOutletDao().getByKodeOutlet(kodeOutlet);
                    outletLama.setKodeOutlet(kodeOutlet);
                    outletLama.setNamaOutlet(namaOutlet);
                    outletLama.setAlamatOutlet(alamatOutlet);
                    DaoFactory.getOutletDao().update(outletLama);
                    JOptionPane.showMessageDialog(this, "Data dengan kode\n"
                            + "<html><font color=#FF0000>" + kodeOutlet + "</font></html>" + "\nBerhasil diUpdate", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                    batalButton.doClick();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void cmdKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdKeluarActionPerformed
        frame.setEnabled(true);
        this.dispose();
}//GEN-LAST:event_cmdKeluarActionPerformed

    private void kodeOutletComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeOutletComboActionPerformed
        String pilih = String.valueOf(kodeOutletCombo.getSelectedItem());

        try {
            activeOutlet = DaoFactory.getOutletDao().getByKodeOutlet(pilih);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        //jika ditemukan
        if (activeOutlet != null) {
            namaOutletTextField.setText(activeOutlet.getNamaOutlet());
            alamatOutletTextField.setText(activeOutlet.getAlamatOutlet());
            simpanButton.setText("Update");
            simpanButton.setMnemonic('U');
            simpanButton.setEnabled(true);
            hapusButton.setEnabled(true);
            kodeOutletCombo.requestFocus();

        } else {
            namaOutletTextField.setText(null);
            alamatOutletTextField.setText(null);
            namaOutletTextField.requestFocus();
            hapusButton.setEnabled(false);
            simpanButton.setText("Simpan");
            simpanButton.setMnemonic('S');
            simpanButton.setEnabled(true);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_kodeOutletComboActionPerformed

    private void namaOutletTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaOutletTextFieldActionPerformed
        simpanButton.setEnabled(true);
        simpanButton.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_namaOutletTextFieldActionPerformed

    private void kodeOutletComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeOutletComboKeyPressed
        if (evt.getKeyCode() == 10) {
        }

    }//GEN-LAST:event_kodeOutletComboKeyPressed

    private void batalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalButtonActionPerformed
        namaOutletTextField.setText(null);
        alamatOutletTextField.setText(null);
        simpanButton.setEnabled(false);
        hapusButton.setEnabled(true);
        kodeOutletCombo.removeAllItems();
        kodeOutletCombo.requestFocus();
        List<Outlet> outlets = null;
        try {
            outlets = service.getOutletDao().getAllOutlet();
        } catch (SQLException ex) {
            Logger.getLogger(OutletForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        OutletTableModel model = new OutletTableModel(outlets);
        outletTable.setModel(model);

        for (Outlet o : outlets) {
            kodeOutletCombo.addItem(o.getKodeOutlet());
        }

}//GEN-LAST:event_batalButtonActionPerformed

private void alamatOutletTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alamatOutletTextFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_alamatOutletTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new NimbusLookAndFeel());
            //UIManager.setLookAndFeel(new smooth.windows.SmoothLookAndFeel());

        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(OutletForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new OutletForm(null).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(OutletForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alamatOutletLabel;
    private javax.swing.JTextField alamatOutletTextField;
    private javax.swing.JButton batalButton;
    private javax.swing.JButton cmdKeluar;
    private javax.swing.JLabel fungsiLabel;
    private javax.swing.JButton hapusButton;
    private javax.swing.JPanel headPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox kodeOutletCombo;
    private javax.swing.JLabel kodeOutletLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel menuLabel;
    private javax.swing.JLabel namaOutletLabel;
    private javax.swing.JTextField namaOutletTextField;
    private javax.swing.JPanel outletPanel;
    private javax.swing.JTable outletTable;
    private com.sistem.panelstatus.PanelStatus panelStatus1;
    private javax.swing.JButton simpanButton;
    // End of variables declaration//GEN-END:variables
}
