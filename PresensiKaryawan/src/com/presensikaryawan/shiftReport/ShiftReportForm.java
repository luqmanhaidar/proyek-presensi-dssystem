package com.presensikaryawan.shiftReport;

import com.presensikaryawan.rekapHistoriGajiReport.*;
import com.dssystem.umum.ChangeFormatDoubleToString;
import com.presensikaryawan.departmentSetting.Department;
import com.presensikaryawan.karyawan.Karyawan;
import com.presensikaryawan.tools.DaoFactory;
import com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/*
 * masterInventoryGrup.java
 *
 * Created on October 21, 2006, 10:06 AM
 */
/**
 *
 * @author Als
 */
public class ShiftReportForm extends javax.swing.JFrame {

    private Karyawan activeKaryawan;
    private Department activeDepartment;
    private JFrame frame;

    /**
     * Creates new form masterInventoryGrup
     */
    public ShiftReportForm(final JFrame frame) throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.frame = frame;
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                frame.setEnabled(true);

            }
        });
        UIManager.put("nimbusBase", new Color(204, 204, 255));

        initComponentFocus();
        List<Karyawan> karyawans = DaoFactory.getKaryawanDao().getAllKaryawan();
        for (Karyawan k : karyawans) {
            nipCombo.addItem(k.getNip());
            nipCombo2.addItem(k.getNip());
        }
        rekapTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }

    private void initComponentFocus() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        panelStatus1 = new com.sistem.panelstatus.PanelStatus();
        inputPanel = new javax.swing.JPanel();
        bulanLabel = new javax.swing.JLabel();
        yearChooser = new com.toedter.calendar.JYearChooser();
        lihatButton = new javax.swing.JButton();
        nipLabel = new javax.swing.JLabel();
        nipCombo = new javax.swing.JComboBox();
        cetakButton = new javax.swing.JButton();
        sampaiLabel = new javax.swing.JLabel();
        nipCombo2 = new javax.swing.JComboBox();
        monthChooser = new com.toedter.calendar.JMonthChooser();
        posisiPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rekapTable = new javax.swing.JTable();
        totalLabel = new javax.swing.JLabel();
        nilaiTotalLabel = new javax.swing.JLabel();
        headPanel9 = new javax.swing.JPanel();
        logoLabel9 = new javax.swing.JLabel();
        menuLabel9 = new javax.swing.JLabel();
        fungsiLabel9 = new javax.swing.JLabel();
        keluarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Shift Report");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jDesktopPane1.setBackground(new java.awt.Color(153, 255, 153));
        jDesktopPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelStatus1.setBounds(0, 610, 1020, 50);
        jDesktopPane1.add(panelStatus1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        inputPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bulanLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        bulanLabel.setText("Bulan :");

        yearChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                yearChooserPropertyChange(evt);
            }
        });

        lihatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Search.gif"))); // NOI18N
        lihatButton.setText("Lihat");
        lihatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatButtonActionPerformed(evt);
            }
        });

        nipLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        nipLabel.setText("NIP");

        nipCombo.setEditable(true);
        nipCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        nipCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nipComboActionPerformed(evt);
            }
        });
        nipCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nipComboKeyPressed(evt);
            }
        });

        cetakButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cetakButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Printer.gif"))); // NOI18N
        cetakButton.setText("Cetak");
        cetakButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakButtonActionPerformed(evt);
            }
        });

        sampaiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        sampaiLabel.setText("sampai");

        nipCombo2.setEditable(true);
        nipCombo2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        nipCombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nipCombo2ActionPerformed(evt);
            }
        });
        nipCombo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nipCombo2KeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout inputPanelLayout = new org.jdesktop.layout.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(nipLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 6, Short.MAX_VALUE)
                        .add(nipCombo, 0, 206, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(sampaiLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(nipCombo2, 0, 206, Short.MAX_VALUE)
                        .add(160, 160, 160)
                        .add(bulanLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(monthChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(yearChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(lihatButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cetakButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, yearChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(nipLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(nipCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(sampaiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(nipCombo2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(bulanLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(monthChooser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(135, 135, 135)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(cetakButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .add(lihatButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        inputPanel.setBounds(0, 70, 1020, 230);
        jDesktopPane1.add(inputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        posisiPanel.setBackground(new java.awt.Color(204, 204, 204));
        posisiPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Posisi"));

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        rekapTable.setAutoCreateRowSorter(true);
        rekapTable.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        rekapTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Bulan", "NIP", "Nama", "S", "I", "A", "T", "L", "Gaji Pokok", "Uang Makan", "Uang Hadir", "Uang Lembur", "P. Terlambat", "P. Lain", "Lain", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(rekapTable);
        rekapTable.getColumnModel().getColumn(0).setResizable(false);
        rekapTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        rekapTable.getColumnModel().getColumn(1).setResizable(false);
        rekapTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        rekapTable.getColumnModel().getColumn(2).setResizable(false);
        rekapTable.getColumnModel().getColumn(2).setPreferredWidth(150);
        rekapTable.getColumnModel().getColumn(3).setResizable(false);
        rekapTable.getColumnModel().getColumn(3).setPreferredWidth(250);
        rekapTable.getColumnModel().getColumn(4).setResizable(false);
        rekapTable.getColumnModel().getColumn(4).setPreferredWidth(50);
        rekapTable.getColumnModel().getColumn(5).setResizable(false);
        rekapTable.getColumnModel().getColumn(5).setPreferredWidth(50);
        rekapTable.getColumnModel().getColumn(6).setResizable(false);
        rekapTable.getColumnModel().getColumn(6).setPreferredWidth(50);
        rekapTable.getColumnModel().getColumn(7).setResizable(false);
        rekapTable.getColumnModel().getColumn(7).setPreferredWidth(50);
        rekapTable.getColumnModel().getColumn(8).setResizable(false);
        rekapTable.getColumnModel().getColumn(8).setPreferredWidth(50);
        rekapTable.getColumnModel().getColumn(9).setResizable(false);
        rekapTable.getColumnModel().getColumn(9).setPreferredWidth(150);
        rekapTable.getColumnModel().getColumn(10).setResizable(false);
        rekapTable.getColumnModel().getColumn(10).setPreferredWidth(150);
        rekapTable.getColumnModel().getColumn(11).setResizable(false);
        rekapTable.getColumnModel().getColumn(11).setPreferredWidth(150);
        rekapTable.getColumnModel().getColumn(12).setResizable(false);
        rekapTable.getColumnModel().getColumn(12).setPreferredWidth(150);
        rekapTable.getColumnModel().getColumn(13).setResizable(false);
        rekapTable.getColumnModel().getColumn(13).setPreferredWidth(150);
        rekapTable.getColumnModel().getColumn(14).setResizable(false);
        rekapTable.getColumnModel().getColumn(14).setPreferredWidth(150);
        rekapTable.getColumnModel().getColumn(15).setResizable(false);
        rekapTable.getColumnModel().getColumn(15).setPreferredWidth(150);
        rekapTable.getColumnModel().getColumn(16).setResizable(false);
        rekapTable.getColumnModel().getColumn(16).setPreferredWidth(200);

        totalLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        totalLabel.setText("Total");

        nilaiTotalLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        nilaiTotalLabel.setText("nilai total");

        org.jdesktop.layout.GroupLayout posisiPanelLayout = new org.jdesktop.layout.GroupLayout(posisiPanel);
        posisiPanel.setLayout(posisiPanelLayout);
        posisiPanelLayout.setHorizontalGroup(
            posisiPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, posisiPanelLayout.createSequentialGroup()
                .addContainerGap(807, Short.MAX_VALUE)
                .add(totalLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nilaiTotalLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        posisiPanelLayout.setVerticalGroup(
            posisiPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, posisiPanelLayout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(posisiPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(totalLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(nilaiTotalLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        posisiPanel.setBounds(0, 300, 1020, 250);
        jDesktopPane1.add(posisiPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        headPanel9.setBackground(new java.awt.Color(255, 255, 255));

        logoLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logosimtel.jpg"))); // NOI18N

        menuLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        menuLabel9.setText("Menu Report Shift Karyawan");

        fungsiLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        fungsiLabel9.setText("Digunakan melihat dan mencetak shift karyawan per bulan");

        org.jdesktop.layout.GroupLayout headPanel9Layout = new org.jdesktop.layout.GroupLayout(headPanel9);
        headPanel9.setLayout(headPanel9Layout);
        headPanel9Layout.setHorizontalGroup(
            headPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .add(logoLabel9)
                .add(4, 4, 4)
                .add(headPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(menuLabel9)
                    .add(fungsiLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 437, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(519, Short.MAX_VALUE))
        );
        headPanel9Layout.setVerticalGroup(
            headPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .add(headPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(logoLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(headPanel9Layout.createSequentialGroup()
                        .add(menuLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fungsiLabel9)))
                .addContainerGap())
        );

        headPanel9.setBounds(0, 0, 1020, 77);
        jDesktopPane1.add(headPanel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        keluarButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        keluarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Exit.gif"))); // NOI18N
        keluarButton.setText("Keluar");
        keluarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarButtonActionPerformed(evt);
            }
        });
        keluarButton.setBounds(900, 560, 110, 40);
        jDesktopPane1.add(keluarButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 659, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jDesktopPane1.getAccessibleContext().setAccessibleName("");
        jDesktopPane1.getAccessibleContext().setAccessibleDescription("");

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1036)/2, (screenSize.height-697)/2, 1036, 697);
    }// </editor-fold>//GEN-END:initComponents

    private void isitable() {
    }

    private void cetakButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakButtonActionPerformed
        Date date = new Date();
        if (yearChooser.getYear() >= (date.getYear() + 1900)) {
            JOptionPane.showMessageDialog(this, "Data yang diminta belum direkap ", "Error", JOptionPane.ERROR_MESSAGE);
        } else if ((nipCombo.getSelectedItem() == null || nipCombo2.getSelectedItem() == null
                || String.valueOf(nipCombo.getSelectedItem()).matches("") || String.valueOf(nipCombo2.getSelectedItem()).matches(""))) {
            JOptionPane.showMessageDialog(this, "NIP harus diisi ", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String nip1 = String.valueOf(nipCombo.getSelectedItem());
            String nip2 = String.valueOf(nipCombo2.getSelectedItem());
            Karyawan karyawan1 = new Karyawan();
            Karyawan karyawan2 = new Karyawan();
            try {
                karyawan1 = DaoFactory.getKaryawanDao().getByNIPKaryawan(nip1);
                karyawan2 = DaoFactory.getKaryawanDao().getByNIPKaryawan(nip2);
            } catch (SQLException ex) {
                Logger.getLogger(RekapGajiForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (karyawan1 == null) {
                JOptionPane.showMessageDialog(this, "Nip I tidak ditemukan dalam database", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else if (karyawan2 == null) {
                JOptionPane.showMessageDialog(this, "Nip II tidak ditemukan dalam database", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                try {

                    String nip = String.valueOf(nipCombo.getSelectedItem());
                    String year = String.valueOf(yearChooser.getYear());

                    String reportSource = "./report/HistoryGajiKaryawan.jasper";
                    Map<String, Object> params = new HashMap<String, Object>();
                    params.put("nip1", String.valueOf(nipCombo.getSelectedItem()));
                    params.put("nip2", String.valueOf(nipCombo2.getSelectedItem()));
                    params.put("tahun", year + "%");

                    JasperPrint jasperPrint = JasperFillManager.fillReport(reportSource, params, DaoFactory.getConnection());
                    JasperViewer.viewReport(jasperPrint, false);
                } catch (JRException ex) {
                    Logger.getLogger(RekapGajiForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException SQLex) {
                    Logger.getLogger(RekapGajiForm.class.getName()).log(Level.SEVERE, null, SQLex);
                }
            }
        }
}//GEN-LAST:event_cetakButtonActionPerformed

    private void lihatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatButtonActionPerformed
        // TODO add your handling code here:
        Date date = new Date();
        if (yearChooser.getYear() >= (date.getYear() + 1900)) {
            JOptionPane.showMessageDialog(this, "Data yang diminta belum direkap ", "Error", JOptionPane.ERROR_MESSAGE);
        } else if ((nipCombo.getSelectedItem() == null || nipCombo2.getSelectedItem() == null
                || String.valueOf(nipCombo.getSelectedItem()).matches("") || String.valueOf(nipCombo2.getSelectedItem()).matches(""))) {
            JOptionPane.showMessageDialog(this, "NIP harus diisi ", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String nip1 = String.valueOf(nipCombo.getSelectedItem());
            String nip2 = String.valueOf(nipCombo2.getSelectedItem());
            Karyawan karyawan1 = new Karyawan();
            Karyawan karyawan2 = new Karyawan();
            try {
                karyawan1 = DaoFactory.getKaryawanDao().getByNIPKaryawan(nip1);
                karyawan2 = DaoFactory.getKaryawanDao().getByNIPKaryawan(nip2);
            } catch (SQLException ex) {
                Logger.getLogger(RekapGajiForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (karyawan1 == null) {
                JOptionPane.showMessageDialog(this, "Nip I tidak ditemukan dalam database", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else if (karyawan2 == null) {
                JOptionPane.showMessageDialog(this, "Nip II tidak ditemukan dalam database", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {

                GregorianCalendar gc = new GregorianCalendar();
                String tahun = String.valueOf(yearChooser.getYear());
                try {
                    List<RekapGaji> rekapGajis = DaoFactory.getRekapGajiDao().getRekapGajiByNIPAndYear(nip1, nip2, tahun);
                    RekapGajiTableModel model = new RekapGajiTableModel(rekapGajis);
                    rekapTable.setModel(model);
                    rekapTable.getColumnModel().getColumn(0).setPreferredWidth(50);
                    rekapTable.getColumnModel().getColumn(1).setPreferredWidth(200);
                    rekapTable.getColumnModel().getColumn(2).setPreferredWidth(150);
                    rekapTable.getColumnModel().getColumn(3).setPreferredWidth(200);
                    rekapTable.getColumnModel().getColumn(4).setPreferredWidth(50);
                    rekapTable.getColumnModel().getColumn(5).setPreferredWidth(50);
                    rekapTable.getColumnModel().getColumn(6).setPreferredWidth(50);
                    rekapTable.getColumnModel().getColumn(7).setPreferredWidth(50);
                    rekapTable.getColumnModel().getColumn(8).setPreferredWidth(50);
                    rekapTable.getColumnModel().getColumn(9).setPreferredWidth(150);
                    rekapTable.getColumnModel().getColumn(10).setPreferredWidth(150);
                    rekapTable.getColumnModel().getColumn(11).setPreferredWidth(150);
                    rekapTable.getColumnModel().getColumn(12).setPreferredWidth(150);
                    rekapTable.getColumnModel().getColumn(13).setPreferredWidth(150);
                    rekapTable.getColumnModel().getColumn(14).setPreferredWidth(150);
                    rekapTable.getColumnModel().getColumn(15).setPreferredWidth(150);
                    rekapTable.getColumnModel().getColumn(16).setPreferredWidth(150);
                    rekapTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    rekapTable.setVisible(true);
                    double totalGaji = DaoFactory.getRekapGajiDao().getTotalGajiSetahun(nip1, nip2, tahun);
                    String totalGajiString = ChangeFormatDoubleToString.getToString(totalGaji);
                    nilaiTotalLabel.setText(totalGajiString);
                } catch (SQLException ex) {
                }
            }
        }
    }//GEN-LAST:event_lihatButtonActionPerformed
    private void nipComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nipComboActionPerformed
        // TODO add your handling code here:
        String golongan = null;
        if (nipCombo.getSelectedItem() != null) {
        }
    }//GEN-LAST:event_nipComboActionPerformed

    private void nipComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nipComboKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nipComboKeyPressed

    private void yearChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_yearChooserPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_yearChooserPropertyChange

    private void keluarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarButtonActionPerformed
        // TODO add your handling code here:
        frame.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_keluarButtonActionPerformed

    private void nipCombo2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nipCombo2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nipCombo2KeyPressed

    private void nipCombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nipCombo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nipCombo2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new NimbusLookAndFeel());



        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(RekapGajiForm.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new RekapGajiForm(null).setVisible(true);


                } catch (SQLException ex) {
                    Logger.getLogger(RekapGajiForm.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bulanLabel;
    private javax.swing.JButton cetakButton;
    private javax.swing.JLabel fungsiLabel9;
    private javax.swing.JPanel headPanel9;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton keluarButton;
    private javax.swing.JButton lihatButton;
    private javax.swing.JLabel logoLabel9;
    private javax.swing.JLabel menuLabel9;
    private com.toedter.calendar.JMonthChooser monthChooser;
    private javax.swing.JLabel nilaiTotalLabel;
    private javax.swing.JComboBox nipCombo;
    private javax.swing.JComboBox nipCombo2;
    private javax.swing.JLabel nipLabel;
    private com.sistem.panelstatus.PanelStatus panelStatus1;
    private javax.swing.JPanel posisiPanel;
    private javax.swing.JTable rekapTable;
    private javax.swing.JLabel sampaiLabel;
    private javax.swing.JLabel totalLabel;
    private com.toedter.calendar.JYearChooser yearChooser;
    // End of variables declaration//GEN-END:variables
}
