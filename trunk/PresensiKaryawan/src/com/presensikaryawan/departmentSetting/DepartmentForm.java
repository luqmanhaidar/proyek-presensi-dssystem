package com.presensikaryawan.departmentSetting;

import com.presensikaryawan.groupShift.*;
import com.presensikaryawan.shiftSetting.*;
import com.presensikaryawan.posisi.*;
import com.presensikaryawan.tools.DaoFactory;
import com.dssystem.umum.ChangeCase;
import com.dssystem.umum.ComponentFocus;
import com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/*
 * masterInventoryGrup.java
 *
 * Created on October 21, 2006, 10:06 AM
 */
/**
 *
 * @author Als
 */
public class DepartmentForm extends javax.swing.JFrame {

    private DaoFactory service;
    private Department activeDepartment;

    /**
     * Creates new form masterInventoryGrup
     */
    public DepartmentForm() throws SQLException {
        initComponents();
        JScrollPane scrollPane=new JScrollPane();
        scrollPane.add(jDesktopPane1);
        getContentPane().add(scrollPane);
        UIManager.put("nimbusBase", new Color(204, 204, 255));
//        UIManager.put("nimbusControl",new Color(153,255,153));
//        UIManager.put("nimbusBlueGrey", new Color(204,204,255));
//        Tampilan();
        // isitable();
        initComponentFocus();
//        namaGroupShiftTextField.setDocument(new ChangeCase().getToUpperCase());
//        ShiftDao dao = DaoFactory.getShiftDao();
//        List<Shift> shifts = dao.getAllShift();
//        ShiftTableModel model = new ShiftTableModel(shifts);
//        shiftTable.setModel(model);
//        for (Shift s : shifts) {
//            kodeGroupShiftCombo.addItem(s.getKodeShift());
//        }
    }

    private void initComponentFocus() {
        namaGroupShiftTextField.addFocusListener(new ComponentFocus(namaGroupShiftTextField));
        kodeGroupShiftCombo.addFocusListener(new ComponentFocus(kodeGroupShiftCombo));
        simpanButton.addFocusListener(new ComponentFocus(simpanButton));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        headPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        menuLabel = new javax.swing.JLabel();
        fungsiLabel = new javax.swing.JLabel();
        panelStatus1 = new com.sistem.panelstatus.PanelStatus();
        cmdKeluar = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        namaGroupShiftLabel = new javax.swing.JLabel();
        kodeGroupShiftLabel = new javax.swing.JLabel();
        namaGroupShiftTextField = new javax.swing.JTextField();
        simpanButton = new javax.swing.JButton();
        kodeGroupShiftCombo = new javax.swing.JComboBox();
        hapusButton = new javax.swing.JButton();
        batalButton = new javax.swing.JButton();
        keteranganGroupShiftLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        keteranganTextField = new javax.swing.JTextField();
        kodeDepartmentLabel = new javax.swing.JLabel();
        namaDepartmentLabel = new javax.swing.JLabel();
        deskripsiDepartmentLabel = new javax.swing.JLabel();
        namaDepartmentTextField = new javax.swing.JTextField();
        kodeDepartmentCombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        deskripsiDepartmentTextArea = new javax.swing.JTextArea();
        departmentPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        shiftTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Kategori");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jDesktopPane1.setBackground(new java.awt.Color(153, 255, 153));
        jDesktopPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        headPanel.setBackground(new java.awt.Color(255, 255, 255));

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logosimtel.jpg"))); // NOI18N

        menuLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        menuLabel.setText("Menu Department Setting");

        fungsiLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        fungsiLabel.setText("Digunakan untuk menambah, edit dan menghapus data department");

        org.jdesktop.layout.GroupLayout headPanelLayout = new org.jdesktop.layout.GroupLayout(headPanel);
        headPanel.setLayout(headPanelLayout);
        headPanelLayout.setHorizontalGroup(
            headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(logoLabel)
                .add(4, 4, 4)
                .add(headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(menuLabel)
                    .add(fungsiLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 472, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        headPanelLayout.setVerticalGroup(
            headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(headPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(headPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(logoLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(headPanelLayout.createSequentialGroup()
                        .add(menuLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fungsiLabel)))
                .addContainerGap())
        );

        headPanel.setBounds(0, 0, 700, 77);
        jDesktopPane1.add(headPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelStatus1.setBounds(0, 620, 700, 50);
        jDesktopPane1.add(panelStatus1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmdKeluar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cmdKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Exit.gif"))); // NOI18N
        cmdKeluar.setText("Keluar");
        cmdKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdKeluarActionPerformed(evt);
            }
        });
        cmdKeluar.setBounds(580, 570, 110, 40);
        jDesktopPane1.add(cmdKeluar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        inputPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        namaGroupShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        namaGroupShiftLabel.setText("Nama Group Shift");

        kodeGroupShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        kodeGroupShiftLabel.setText("Kode Group Shift");

        namaGroupShiftTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        namaGroupShiftTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        namaGroupShiftTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaGroupShiftTextFieldActionPerformed(evt);
            }
        });

        simpanButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        simpanButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Save.gif"))); // NOI18N
        simpanButton.setMnemonic('S');
        simpanButton.setText("Simpan");
        simpanButton.setToolTipText("Klik Untuk Simpan");
        simpanButton.setEnabled(false);
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });
        simpanButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                simpanButtonKeyPressed(evt);
            }
        });

        kodeGroupShiftCombo.setEditable(true);
        kodeGroupShiftCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeGroupShiftCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeGroupShiftComboActionPerformed(evt);
            }
        });
        kodeGroupShiftCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeGroupShiftComboKeyPressed(evt);
            }
        });

        hapusButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        hapusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Delete.gif"))); // NOI18N
        hapusButton.setMnemonic('H');
        hapusButton.setText("Hapus");
        hapusButton.setToolTipText("Tombol Untuk Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        batalButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        batalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/24/Undo.gif"))); // NOI18N
        batalButton.setText("Batal");
        batalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalButtonActionPerformed(evt);
            }
        });

        keteranganGroupShiftLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        keteranganGroupShiftLabel.setText("Keterangan");

        kodeDepartmentLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        kodeDepartmentLabel.setText("Kode Department");

        namaDepartmentLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        namaDepartmentLabel.setText("Nama Department");

        deskripsiDepartmentLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        deskripsiDepartmentLabel.setText("Deskripsi");

        namaDepartmentTextField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        namaDepartmentTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        namaDepartmentTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaDepartmentTextFieldActionPerformed(evt);
            }
        });

        kodeDepartmentCombo.setEditable(true);
        kodeDepartmentCombo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        kodeDepartmentCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeDepartmentComboActionPerformed(evt);
            }
        });
        kodeDepartmentCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodeDepartmentComboKeyPressed(evt);
            }
        });

        deskripsiDepartmentTextArea.setColumns(20);
        deskripsiDepartmentTextArea.setRows(5);
        jScrollPane2.setViewportView(deskripsiDepartmentTextArea);

        org.jdesktop.layout.GroupLayout inputPanelLayout = new org.jdesktop.layout.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator1)
            .add(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(simpanButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(hapusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(batalButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(inputPanelLayout.createSequentialGroup()
                                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, keteranganGroupShiftLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(namaGroupShiftLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(kodeGroupShiftLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .add(37, 37, 37)
                                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(namaGroupShiftTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(kodeGroupShiftCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(keteranganTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 500, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(inputPanelLayout.createSequentialGroup()
                                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, deskripsiDepartmentLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(namaDepartmentLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(kodeDepartmentLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(37, 37, 37)
                                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(kodeDepartmentCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(namaDepartmentTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .add(0, 39, Short.MAX_VALUE)))
                .addContainerGap())
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(kodeDepartmentLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeDepartmentCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(namaDepartmentLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(namaDepartmentTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(deskripsiDepartmentLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(inputPanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(8, 8, 8)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(8, 8, 8)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(kodeGroupShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(kodeGroupShiftCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(namaGroupShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(namaGroupShiftTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(keteranganGroupShiftLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(keteranganTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(inputPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(batalButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(hapusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(simpanButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(57, 57, 57))
        );

        inputPanel.setBounds(0, 70, 700, 360);
        jDesktopPane1.add(inputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        departmentPanel.setBackground(new java.awt.Color(204, 204, 204));
        departmentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Shift"));

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        shiftTable.setAutoCreateRowSorter(true);
        shiftTable.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        shiftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "KODE DEPARTMENT", "NAMA DEPARTMENT", "KODE GROUP SHIFT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        shiftTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shiftTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(shiftTable);

        org.jdesktop.layout.GroupLayout departmentPanelLayout = new org.jdesktop.layout.GroupLayout(departmentPanel);
        departmentPanel.setLayout(departmentPanelLayout);
        departmentPanelLayout.setHorizontalGroup(
            departmentPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
        );
        departmentPanelLayout.setVerticalGroup(
            departmentPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
        );

        departmentPanel.setBounds(0, 430, 700, 130);
        jDesktopPane1.add(departmentPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDesktopPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 686, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jDesktopPane1.getAccessibleContext().setAccessibleName("");
        jDesktopPane1.getAccessibleContext().setAccessibleDescription("");

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-712)/2, (screenSize.height-706)/2, 712, 706);
    }// </editor-fold>//GEN-END:initComponents

    private void shiftTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shiftTableMouseClicked
        int row = shiftTable.getSelectedRow();
        String kodegroup = shiftTable.getValueAt(row, 0).toString();
        String namagroup = shiftTable.getValueAt(row, 1).toString();
        String waktuMulaiGroup = shiftTable.getValueAt(row, 2).toString();
        String waktuSelesaiGroup = shiftTable.getValueAt(row, 3).toString();

        namaGroupShiftTextField.setText(namagroup);
        kodeGroupShiftCombo.setSelectedItem(kodegroup);// TODO add your handling code here:

    }//GEN-LAST:event_shiftTableMouseClicked
    private void isitable() {
    }

    private void cmdKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdKeluarActionPerformed

        this.dispose();
}//GEN-LAST:event_cmdKeluarActionPerformed

    private void batalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalButtonActionPerformed
        namaGroupShiftTextField.setText(null);
        simpanButton.setEnabled(false);
        hapusButton.setEnabled(true);
        kodeGroupShiftCombo.removeAllItems();

        List<Shift> shifts = null;
        try {
            shifts = DaoFactory.getShiftDao().getAllShift();
        } catch (SQLException ex) {
            Logger.getLogger(ShiftForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        ShiftTableModel model = new ShiftTableModel(shifts);
        shiftTable.setModel(model);

        for (Shift s : shifts) {
            kodeGroupShiftCombo.addItem(s.getKodeShift());
        }
    }//GEN-LAST:event_batalButtonActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        String kodeShift = String.valueOf(kodeGroupShiftCombo.getSelectedItem());
        String namaShift = namaGroupShiftTextField.getText();

        int ok = JOptionPane.showConfirmDialog(null, "Anda Yakin Akan Menghapus Shift Kerja\nDengan Kode = " + kodeShift + "", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {
            try {
//                DaoFactory.getShiftDao().delete(activeShift);
                JOptionPane.showMessageDialog(this, "Data Shift Kerja Berhasil Dihapus Dengan Kode\n"
                    + "<html><font color=#FF0000>" + kodeShift + "</font></html>", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Data Gagal Dihapus\n"
                    + "<html><font color=#FF0000>" + ex + "</font></html>", "Error", JOptionPane.ERROR_MESSAGE);

            }

        }
        batalButton.doClick();
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void kodeGroupShiftComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeGroupShiftComboKeyPressed
        if (evt.getKeyCode() == 10) {
        }
    }//GEN-LAST:event_kodeGroupShiftComboKeyPressed

    private void kodeGroupShiftComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeGroupShiftComboActionPerformed
        if (kodeGroupShiftCombo.getSelectedItem() != null) {
            String pilih = String.valueOf(kodeGroupShiftCombo.getSelectedItem());
            if (pilih != null) {

                try {
//                    activeShift = DaoFactory.getShiftDao().getByKode(pilih);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            //jika ditemukan
//            if (activeShift != null) {
//                namaGroupShiftTextField.setText(activeShift.getNamaShift());
//                String waktuMulaiGroup = activeShift.getWaktuMulai();
//                String waktuSelesaiGroup = activeShift.getWaktuSelesai();
//                jamMulaiCombo.setSelectedItem(waktuMulaiGroup.substring(0, 2));
//                jamSelesaiCombo.setSelectedItem(waktuSelesaiGroup.substring(0, 2));
//                menitMulaiCombo.setSelectedItem(waktuMulaiGroup.substring(3, 5));
//                menitSelesaiCombo.setSelectedItem(waktuSelesaiGroup.substring(3, 5));
//                simpanButton.setText("Update");
//                simpanButton.setMnemonic('U');
//                simpanButton.setEnabled(true);
//                hapusButton.setEnabled(true);
//                kodeGroupShiftCombo.requestFocus();
//
//            } else {
//                namaGroupShiftTextField.setText(null);
//                namaGroupShiftTextField.requestFocus();
//                hapusButton.setEnabled(false);
//                simpanButton.setText("Simpan");
//                simpanButton.setMnemonic('S');
//                simpanButton.setEnabled(true);
//            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_kodeGroupShiftComboActionPerformed

    private void simpanButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_simpanButtonKeyPressed
        simpanButton.doClick();// TODO add your handling code here:
    }//GEN-LAST:event_simpanButtonKeyPressed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        String kodeShift = String.valueOf(kodeGroupShiftCombo.getSelectedItem());
        String namaShift = namaGroupShiftTextField.getText();
        Shift shiftBaru = new Shift();
//        String waktuMulai = String.valueOf(jamMulaiCombo.getSelectedItem()) + ":" + String.valueOf(menitMulaiCombo.getSelectedItem());
//        String waktuSelesai = String.valueOf(jamSelesaiCombo.getSelectedItem()) + ":" + String.valueOf(menitSelesaiCombo.getSelectedItem());
        shiftBaru.setKodeShift(kodeShift);
        shiftBaru.setNamaShift(namaShift);
//        shiftBaru.setWaktuMulai(waktuMulai);
//        shiftBaru.setWaktuSelesai(waktuSelesai);
        if ("Simpan".equals(simpanButton.getText())) {
            try {
                DaoFactory.getShiftDao().insert(shiftBaru);
                JOptionPane.showMessageDialog(this, "Data Shift Kerja Dengan Kode \n"
                    + "<html><font color=#FF0000>" + kodeShift + "</font></html>" + "\nBerhasil diSimpan", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                batalButton.doClick();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            try {
                Shift shiftLama = DaoFactory.getShiftDao().getByKode(kodeShift);
                shiftLama.setKodeShift(kodeShift);
                shiftLama.setNamaShift(namaShift);
//                shiftLama.setWaktuMulai(waktuMulai);
//                shiftLama.setWaktuSelesai(waktuSelesai);
                DaoFactory.getShiftDao().update(shiftLama);
                JOptionPane.showMessageDialog(this, "Data Shift Kerja Dengan Kode\n"
                    + "<html><font color=#FF0000>" + kodeShift + "</font></html>" + "\nBerhasil diUpdate", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);

                batalButton.doClick();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void namaGroupShiftTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaGroupShiftTextFieldActionPerformed
        simpanButton.setEnabled(true);
//        jamMulaiCombo.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_namaGroupShiftTextFieldActionPerformed

    private void namaDepartmentTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaDepartmentTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaDepartmentTextFieldActionPerformed

    private void kodeDepartmentComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeDepartmentComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kodeDepartmentComboActionPerformed

    private void kodeDepartmentComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodeDepartmentComboKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_kodeDepartmentComboKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new NimbusLookAndFeel());
            //UIManager.setLookAndFeel(new smooth.windows.SmoothLookAndFeel());

        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(DepartmentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new DepartmentForm().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(DepartmentForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton batalButton;
    private javax.swing.JButton cmdKeluar;
    private javax.swing.JPanel departmentPanel;
    private javax.swing.JLabel deskripsiDepartmentLabel;
    private javax.swing.JTextArea deskripsiDepartmentTextArea;
    private javax.swing.JLabel fungsiLabel;
    private javax.swing.JButton hapusButton;
    private javax.swing.JPanel headPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel keteranganGroupShiftLabel;
    private javax.swing.JTextField keteranganTextField;
    private javax.swing.JComboBox kodeDepartmentCombo;
    private javax.swing.JLabel kodeDepartmentLabel;
    private javax.swing.JComboBox kodeGroupShiftCombo;
    private javax.swing.JLabel kodeGroupShiftLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel menuLabel;
    private javax.swing.JLabel namaDepartmentLabel;
    private javax.swing.JTextField namaDepartmentTextField;
    private javax.swing.JLabel namaGroupShiftLabel;
    private javax.swing.JTextField namaGroupShiftTextField;
    private com.sistem.panelstatus.PanelStatus panelStatus1;
    private javax.swing.JTable shiftTable;
    private javax.swing.JButton simpanButton;
    // End of variables declaration//GEN-END:variables
}
